"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.memClientBatchCreateMems = void 0;
const types_1 = require("../../api/__codegen__/types");
const memClientBatchCreateMems = ({ memClient }) => 
/**
 * Creates a new mem for each set of inputs, then returns the some details about the created mems.
 */
(batchArgs) => __awaiter(void 0, void 0, void 0, function* () {
    const inputs = batchArgs.map(({ memId, content, isRead, isArchived, scheduledFor, createdAt }) => {
        const input = {
            memId: memId !== null && memId !== void 0 ? memId : null,
            content,
            format: null,
            isRead: isRead !== null && isRead !== void 0 ? isRead : null,
            isArchived: isArchived !== null && isArchived !== void 0 ? isArchived : null,
            scheduledFor: scheduledFor !== null && scheduledFor !== void 0 ? scheduledFor : null,
            createdAt: createdAt !== null && createdAt !== void 0 ? createdAt : null,
            richTextDocument: null,
            source: null,
            clientId: null,
        };
        return input;
    });
    const result = yield memClient.graphqlRequest(types_1.BatchCreateMemsDocument, {
        inputs,
    });
    const batchMemsData = result.batchCreateMems.map(data => data.mem);
    return batchMemsData;
});
exports.memClientBatchCreateMems = memClientBatchCreateMems;
//# sourceMappingURL=batchCreateMems.js.map