import { GqCreateMemMutationVariables } from "../../api/__codegen__/types";
import { MemClientMethodArgs } from "./types";
declare type MutationVariables = GqCreateMemMutationVariables["input"];
export interface MemClientCreateMemArgs {
    content: MutationVariables["content"];
    isRead?: MutationVariables["isRead"];
    isArchived?: MutationVariables["isArchived"];
    scheduledFor?: MutationVariables["scheduledFor"];
    createdAt?: MutationVariables["createdAt"];
    memId?: MutationVariables["memId"];
}
export declare const memClientCreateMem: ({ memClient }: MemClientMethodArgs) => ({ memId, content, isRead, isArchived, scheduledFor, createdAt, }: MemClientCreateMemArgs) => Promise<{
    __typename?: "Mem" | undefined;
} & Pick<import("../../api/__codegen__/types").GqMem, "id">>;
export {};
//# sourceMappingURL=createMem.d.ts.map