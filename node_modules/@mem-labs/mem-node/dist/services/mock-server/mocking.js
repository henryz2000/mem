"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._mockServerMutation = exports._mockServerQuery = void 0;
const msw_1 = require("msw");
const runtime_1 = require("../../utils/errors/runtime");
const _1 = require(".");
const parseOperationName = ({ document, }) => {
    var _a;
    const documentOperationDefinition = document.definitions[0];
    const operationName = (_a = documentOperationDefinition.name) === null || _a === void 0 ? void 0 : _a.value;
    if (!operationName) {
        throw new runtime_1.RuntimeError({
            message: "Unable to parse operation name from graphql document.",
        });
    }
    return { operationName };
};
const _mockServerQuery = ({ document, data, }) => {
    const { operationName } = parseOperationName({ document });
    const mockedQuery = msw_1.graphql.query(operationName, (_req, res, ctx) => {
        return res(ctx.data(data));
    });
    _1.mockServerService.instance().use(mockedQuery);
};
exports._mockServerQuery = _mockServerQuery;
const _mockServerMutation = ({ document, data, }) => {
    const { operationName } = parseOperationName({ document });
    const mockedMutation = msw_1.graphql.mutation(operationName, (_req, res, ctx) => {
        return res(ctx.data(data));
    });
    _1.mockServerService.instance().use(mockedMutation);
};
exports._mockServerMutation = _mockServerMutation;
//# sourceMappingURL=mocking.js.map