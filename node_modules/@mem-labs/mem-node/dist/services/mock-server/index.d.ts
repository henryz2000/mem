export declare const mockServerService: {
    readonly initialize: () => Promise<void>;
    readonly instance: () => import("msw/lib/types/node").SetupServerApi;
    readonly listen: () => void;
    readonly resetHandlers: () => void;
    readonly close: () => void;
    readonly mockQuery: <TVariables extends import("type-fest").JsonObject, TResult>({ document, data, }: {
        document: import("@graphql-typed-document-node/core").TypedDocumentNode<TResult, TVariables>;
        data: TResult;
    }) => void;
    readonly mockMutation: <TVariables_1 extends import("type-fest").JsonObject, TResult_1>({ document, data, }: {
        document: import("@graphql-typed-document-node/core").TypedDocumentNode<TResult_1, TVariables_1>;
        data: TResult_1;
    }) => void;
};
//# sourceMappingURL=index.d.ts.map