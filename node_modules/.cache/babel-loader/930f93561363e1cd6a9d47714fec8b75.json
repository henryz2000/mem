{"ast":null,"code":"// @ts-nocheck\nimport refractorJavascript from './javascript.js';\nmongodb.displayName = 'mongodb';\nmongodb.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function mongodb(Prism) {\n  Prism.register(refractorJavascript);\n\n  (function (Prism) {\n    var operators = [// query and projection\n    '$eq', '$gt', '$gte', '$in', '$lt', '$lte', '$ne', '$nin', '$and', '$not', '$nor', '$or', '$exists', '$type', '$expr', '$jsonSchema', '$mod', '$regex', '$text', '$where', '$geoIntersects', '$geoWithin', '$near', '$nearSphere', '$all', '$elemMatch', '$size', '$bitsAllClear', '$bitsAllSet', '$bitsAnyClear', '$bitsAnySet', '$comment', '$elemMatch', '$meta', '$slice', // update\n    '$currentDate', '$inc', '$min', '$max', '$mul', '$rename', '$set', '$setOnInsert', '$unset', '$addToSet', '$pop', '$pull', '$push', '$pullAll', '$each', '$position', '$slice', '$sort', '$bit', // aggregation pipeline stages\n    '$addFields', '$bucket', '$bucketAuto', '$collStats', '$count', '$currentOp', '$facet', '$geoNear', '$graphLookup', '$group', '$indexStats', '$limit', '$listLocalSessions', '$listSessions', '$lookup', '$match', '$merge', '$out', '$planCacheStats', '$project', '$redact', '$replaceRoot', '$replaceWith', '$sample', '$set', '$skip', '$sort', '$sortByCount', '$unionWith', '$unset', '$unwind', '$setWindowFields', // aggregation pipeline operators\n    '$abs', '$accumulator', '$acos', '$acosh', '$add', '$addToSet', '$allElementsTrue', '$and', '$anyElementTrue', '$arrayElemAt', '$arrayToObject', '$asin', '$asinh', '$atan', '$atan2', '$atanh', '$avg', '$binarySize', '$bsonSize', '$ceil', '$cmp', '$concat', '$concatArrays', '$cond', '$convert', '$cos', '$dateFromParts', '$dateToParts', '$dateFromString', '$dateToString', '$dayOfMonth', '$dayOfWeek', '$dayOfYear', '$degreesToRadians', '$divide', '$eq', '$exp', '$filter', '$first', '$floor', '$function', '$gt', '$gte', '$hour', '$ifNull', '$in', '$indexOfArray', '$indexOfBytes', '$indexOfCP', '$isArray', '$isNumber', '$isoDayOfWeek', '$isoWeek', '$isoWeekYear', '$last', '$last', '$let', '$literal', '$ln', '$log', '$log10', '$lt', '$lte', '$ltrim', '$map', '$max', '$mergeObjects', '$meta', '$min', '$millisecond', '$minute', '$mod', '$month', '$multiply', '$ne', '$not', '$objectToArray', '$or', '$pow', '$push', '$radiansToDegrees', '$range', '$reduce', '$regexFind', '$regexFindAll', '$regexMatch', '$replaceOne', '$replaceAll', '$reverseArray', '$round', '$rtrim', '$second', '$setDifference', '$setEquals', '$setIntersection', '$setIsSubset', '$setUnion', '$size', '$sin', '$slice', '$split', '$sqrt', '$stdDevPop', '$stdDevSamp', '$strcasecmp', '$strLenBytes', '$strLenCP', '$substr', '$substrBytes', '$substrCP', '$subtract', '$sum', '$switch', '$tan', '$toBool', '$toDate', '$toDecimal', '$toDouble', '$toInt', '$toLong', '$toObjectId', '$toString', '$toLower', '$toUpper', '$trim', '$trunc', '$type', '$week', '$year', '$zip', '$count', '$dateAdd', '$dateDiff', '$dateSubtract', '$dateTrunc', '$getField', '$rand', '$sampleRate', '$setField', '$unsetField', // aggregation pipeline query modifiers\n    '$comment', '$explain', '$hint', '$max', '$maxTimeMS', '$min', '$orderby', '$query', '$returnKey', '$showDiskLoc', '$natural'];\n    var builtinFunctions = ['ObjectId', 'Code', 'BinData', 'DBRef', 'Timestamp', 'NumberLong', 'NumberDecimal', 'MaxKey', 'MinKey', 'RegExp', 'ISODate', 'UUID'];\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$');\n    });\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b';\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {});\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    });\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern: /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    };\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/mongodb.js"],"names":["refractorJavascript","mongodb","displayName","aliases","Prism","register","operators","builtinFunctions","map","operator","replace","operatorsSource","join","languages","extend","insertBefore","property","pattern","greedy","inside","keyword","RegExp","string","url","entity","builtin","alias"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mongodb(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice',\n      // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit',\n      // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields',\n      // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField',\n      // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}