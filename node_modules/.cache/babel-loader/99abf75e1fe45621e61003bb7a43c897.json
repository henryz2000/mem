{"ast":null,"code":"// @ts-nocheck\ngedcom.displayName = 'gedcom';\ngedcom.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    record: {\n      // Preceded by level and optional pointer\n      pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  };\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/gedcom.js"],"names":["gedcom","displayName","aliases","Prism","languages","pattern","lookbehind","inside","pointer","alias","record","level"],"mappings":"AAAA;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACpCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvB,kBAAc;AACZ;AACAK,MAAAA,OAAO,EACL,kFAHU;AAIZC,MAAAA,UAAU,EAAE,IAJA;AAKZC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AACPH,UAAAA,OAAO,EAAE,wDADF;AAEPI,UAAAA,KAAK,EAAE;AAFA;AADH;AALI,KADS;AAavBC,IAAAA,MAAM,EAAE;AACN;AACAL,MAAAA,OAAO,EACL,+EAHI;AAINC,MAAAA,UAAU,EAAE,IAJN;AAKNG,MAAAA,KAAK,EAAE;AALD,KAbe;AAoBvBE,IAAAA,KAAK,EAAE;AACLN,MAAAA,OAAO,EAAE,eADJ;AAELC,MAAAA,UAAU,EAAE,IAFP;AAGLG,MAAAA,KAAK,EAAE;AAHF,KApBgB;AAyBvBD,IAAAA,OAAO,EAAE;AACPH,MAAAA,OAAO,EAAE,sDADF;AAEPI,MAAAA,KAAK,EAAE;AAFA;AAzBc,GAAzB;AA8BD","sourcesContent":["// @ts-nocheck\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    record: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}