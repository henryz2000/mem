{"ast":null,"code":"import _regeneratorRuntime from\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// const messagesFromReactAppListener = (\n//   msg: DOMMessage,\n//   sender: chrome.runtime.MessageSender,\n//   sendResponse: (response: DOMMessageResponse) => void\n// ) => {\n//   console.log(\"[content.js]. Message received\", msg);\n//   const response: DOMMessageResponse = {\n//     title: document.title,\n//     headlines: Array.from(document.getElementsByTagName<\"h1\">(\"h1\")).map(\n//       (h1) => h1.innerText\n//     ),\n//   };\n//   console.log(\"[content.js]. Message response\", response);\n//   sendResponse(response);\n// };\n// /**\n//  * Fired when a message is sent from either an extension process or a content script.\n//  */\n// chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"test\");// const [tab] = await chrome.tabs.query({\n//   active: true,\n//   lastFocusedWindow: true,\n// });\n// const response = await chrome.tabs.sendMessage(tab.id!, {\n//   greeting: \"hello\",\n// });\n// // do something with response here, not outside the function\n// console.log(response);\ncase 1:case\"end\":return _context.stop();}}},_callee);}))();chrome.runtime.onMessage.addListener(function(request,sender,sendResponse){console.log(sender.tab?\"from a content script:\"+sender.tab.url:\"from the extension\");// if (request.greeting === \"hello\") sendResponse({ farewell: \"goodbye\" });\nsendResponse({farewell:\"goodbye\"});});export{};","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/src/chromeServices/DOMEvaluator.ts"],"names":["console","log","chrome","runtime","onMessage","addListener","request","sender","sendResponse","tab","url","farewell"],"mappings":"+QAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,wDAAC,mIACCA,OAAO,CAACC,GAAR,CAAY,MAAZ,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVD,sDAAD,KAaAC,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqC,SAAUC,OAAV,CAAmBC,MAAnB,CAA2BC,YAA3B,CAAyC,CAC5ER,OAAO,CAACC,GAAR,CACEM,MAAM,CAACE,GAAP,CACI,yBAA2BF,MAAM,CAACE,GAAP,CAAWC,GAD1C,CAEI,oBAHN,EAKA;AACAF,YAAY,CAAC,CAAEG,QAAQ,CAAE,SAAZ,CAAD,CAAZ,CACD,CARD,E","sourcesContent":["import { DOMMessage, DOMMessageResponse } from \"../types\";\n\n// const messagesFromReactAppListener = (\n//   msg: DOMMessage,\n//   sender: chrome.runtime.MessageSender,\n//   sendResponse: (response: DOMMessageResponse) => void\n// ) => {\n//   console.log(\"[content.js]. Message received\", msg);\n\n//   const response: DOMMessageResponse = {\n//     title: document.title,\n//     headlines: Array.from(document.getElementsByTagName<\"h1\">(\"h1\")).map(\n//       (h1) => h1.innerText\n//     ),\n//   };\n\n//   console.log(\"[content.js]. Message response\", response);\n\n//   sendResponse(response);\n// };\n\n// /**\n//  * Fired when a message is sent from either an extension process or a content script.\n//  */\n// chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\n\n(async () => {\n  console.log(\"test\");\n  // const [tab] = await chrome.tabs.query({\n  //   active: true,\n  //   lastFocusedWindow: true,\n  // });\n  // const response = await chrome.tabs.sendMessage(tab.id!, {\n  //   greeting: \"hello\",\n  // });\n  // // do something with response here, not outside the function\n  // console.log(response);\n})();\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n  console.log(\n    sender.tab\n      ? \"from a content script:\" + sender.tab.url\n      : \"from the extension\"\n  );\n  // if (request.greeting === \"hello\") sendResponse({ farewell: \"goodbye\" });\n  sendResponse({ farewell: \"goodbye\" });\n});\n"]},"metadata":{},"sourceType":"module"}