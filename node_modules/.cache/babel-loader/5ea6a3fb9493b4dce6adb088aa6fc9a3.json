{"ast":null,"code":"import _slicedToArray from\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import\"./App.css\";import{MemClient}from\"@mem-labs/mem-node\";import MDEditor from\"@uiw/react-md-editor\";import{Button,Form}from\"react-bootstrap\";// \"5436519d-2a67-44ac-a1e0-f2952a2c2953\"\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";localStorage.clear();function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),url=_useState4[0],setUrl=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),tags=_useState6[0],setTags=_useState6[1];var _useState7=useState(localStorage.getItem(\"apiKey\")||\"\"),_useState8=_slicedToArray(_useState7,2),apiKey=_useState8[0],setApiKey=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),memClient=_useState10[0],setMemClient=_useState10[1];var createMemClient=useCallback(function(){var client=new MemClient({apiAccessToken:apiKey});setMemClient(client);localStorage.setItem(\"apiKey\",apiKey);},[apiKey]);var createMem=function createMem(){if(memClient){memClient.createMem({content:content||\"\"});}// stores the mem locally for future reference\nlocalStorage.setItem(url,JSON.stringify(content));};React.useEffect(function(){if(localStorage.getItem(\"apiKey\")){createMemClient();}// queries for the correct tab to send messages to\nchrome.tabs&&chrome.tabs.query({active:true,currentWindow:true},function(tabs){// sends a message to get the URL and contents of the page\nchrome.tabs.sendMessage(tabs[0].id||0,{type:\"GET_DOM\"},function(response){var _localStorage$getItem;setUrl(response.url);setContent(((_localStorage$getItem=localStorage.getItem(response.url))===null||_localStorage$getItem===void 0?void 0:_localStorage$getItem.slice(1,-1))||response.content);});});},[createMemClient]);// regex to separate out tags\nvar tagRegex=/\\B(?<!#)(#[a-zA-Z0-9_]+\\b)/g;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"titlebar\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mem Chrome Extension\"}),memClient&&/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:createMem,children:\"Add to Mem\"})]}),memClient?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(MDEditor,{value:content,onChange:function onChange(val){var match=Array.from(val.matchAll(tagRegex));setContent(val);setTags(match);},className:\"markdown\"})}),/*#__PURE__*/_jsx(\"div\",{children:tags===null||tags===void 0?void 0:tags.map(function(val){var hashtag=val[0];var tag=val[0].slice(1);return/*#__PURE__*/_jsx(Button,{size:\"sm\",href:\"https://mem.ai/s?filter=%7B%22type%22%3A%22HasTag%22%2C%22tag%22%3A%22\".concat(tag.toLowerCase(),\"%22%2C%22displayName%22%3A%22\").concat(tag,\"%22%7D\"),target:\"_blank\",className:\"tag\",children:hashtag});})})]}):/*#__PURE__*/ // if API key is not yet defined\n_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"key\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"API Key\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(e){return setApiKey(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{onClick:createMemClient,className:\"float-end\",children:\"Submit\"})]})]});}export default App;","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/src/App.tsx"],"names":["React","useCallback","useState","MemClient","MDEditor","Button","Form","localStorage","clear","App","content","setContent","url","setUrl","tags","setTags","getItem","apiKey","setApiKey","memClient","setMemClient","createMemClient","client","apiAccessToken","setItem","createMem","JSON","stringify","useEffect","chrome","tabs","query","active","currentWindow","sendMessage","id","type","response","slice","tagRegex","val","match","Array","from","matchAll","map","hashtag","tag","toLowerCase","e","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport \"./App.css\";\nimport { DOMMessage, DOMMessageResponse } from \"./types\";\nimport { MemClient } from \"@mem-labs/mem-node\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { Button, Form } from \"react-bootstrap\";\n\n// \"5436519d-2a67-44ac-a1e0-f2952a2c2953\"\n\nlocalStorage.clear();\n\nfunction App() {\n  const [content, setContent] = useState<string | undefined>(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [tags, setTags] = useState<RegExpMatchArray[]>([]);\n  const [apiKey, setApiKey] = useState(localStorage.getItem(\"apiKey\") || \"\");\n  const [memClient, setMemClient] = useState<MemClient>();\n\n  const createMemClient = useCallback(() => {\n    const client = new MemClient({\n      apiAccessToken: apiKey,\n    });\n    setMemClient(client);\n    localStorage.setItem(\"apiKey\", apiKey);\n  }, [apiKey]);\n\n  const createMem = () => {\n    if (memClient) {\n      memClient.createMem({\n        content: content || \"\",\n      });\n    }\n    // stores the mem locally for future reference\n    localStorage.setItem(url, JSON.stringify(content));\n  };\n\n  React.useEffect(() => {\n    if (localStorage.getItem(\"apiKey\")) {\n      createMemClient();\n    }\n\n    // queries for the correct tab to send messages to\n    chrome.tabs &&\n      chrome.tabs.query(\n        {\n          active: true,\n          currentWindow: true,\n        },\n        (tabs) => {\n          // sends a message to get the URL and contents of the page\n          chrome.tabs.sendMessage(\n            tabs[0].id || 0,\n            { type: \"GET_DOM\" } as DOMMessage,\n            (response: DOMMessageResponse) => {\n              setUrl(response.url);\n              setContent(\n                localStorage.getItem(response.url)?.slice(1, -1) ||\n                  response.content\n              );\n            }\n          );\n        }\n      );\n  }, [createMemClient]);\n\n  // regex to separate out tags\n  const tagRegex = /\\B(?<!#)(#[a-zA-Z0-9_]+\\b)/g;\n\n  return (\n    <div className=\"App\">\n      <div className=\"titlebar\">\n        <h1>Mem Chrome Extension</h1>\n        {memClient && (\n          <Button variant=\"danger\" onClick={createMem}>\n            Add to Mem\n          </Button>\n        )}\n      </div>\n\n      {memClient ? (\n        <>\n          <div className=\"container\">\n            <MDEditor\n              value={content}\n              onChange={(val) => {\n                const match = Array.from(val!.matchAll(tagRegex));\n                setContent(val);\n                setTags(match);\n              }}\n              className=\"markdown\"\n            />\n          </div>\n\n          <div>\n            {tags?.map((val) => {\n              const hashtag = val[0];\n              const tag = val[0].slice(1);\n              return (\n                <Button\n                  size=\"sm\"\n                  href={`https://mem.ai/s?filter=%7B%22type%22%3A%22HasTag%22%2C%22tag%22%3A%22${tag.toLowerCase()}%22%2C%22displayName%22%3A%22${tag}%22%7D`}\n                  target=\"_blank\"\n                  className=\"tag\"\n                >\n                  {hashtag}\n                </Button>\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        // if API key is not yet defined\n        <div className=\"form\">\n          <div className=\"key\">\n            <Form.Label>API Key</Form.Label>\n            <Form.Control onChange={(e) => setApiKey(e.target.value)} />\n          </div>\n          <Button onClick={createMemClient} className=\"float-end\">\n            Submit\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}