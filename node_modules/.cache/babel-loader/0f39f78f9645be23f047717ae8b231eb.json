{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MemClient = void 0;\n\nconst graphql_request_1 = require(\"graphql-request\");\n\nconst graphql_1 = require(\"../services/mock-server/graphql\");\n\nconst base_1 = require(\"../utils/errors/base\");\n\nconst runtime_1 = require(\"../utils/errors/runtime\");\n\nconst logger_1 = require(\"../utils/logger\");\n\nconst constants_1 = require(\"./constants\");\n\nconst batchCreateMems_1 = require(\"./methods/batchCreateMems\");\n\nconst createMem_1 = require(\"./methods/createMem\");\n\nconst healthCheck_1 = require(\"./methods/healthCheck\");\n\nclass MemClient {\n  constructor({\n    apiEndpoint = constants_1.defaultMemApiEndpoint,\n    apiAccessToken,\n    logLevel\n  }) {\n    this.healthCheck = healthCheck_1.memClientHealthCheck({\n      memClient: this\n    });\n    this.createMem = createMem_1.memClientCreateMem({\n      memClient: this\n    });\n    this.batchCreateMems = batchCreateMems_1.memClientBatchCreateMems({\n      memClient: this\n    });\n    this.logger = new logger_1.Logger({\n      level: logLevel\n    });\n\n    if (!apiAccessToken) {\n      throw new base_1.ClientInitializationError({\n        message: \"An `apiAccessToken` must be provided when initializing the MemClient.\"\n      });\n    }\n\n    const defaultHeaders = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `${constants_1.defaultMemAuthorizationScheme} ${apiAccessToken}`\n    };\n    this.apiClient = new graphql_request_1.GraphQLClient(apiEndpoint, {\n      headers: defaultHeaders\n    });\n    this.logger.debug(`[constructor()] MemClient Initialized.`);\n  }\n\n  graphqlRequest(document, variables) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.logger.debug(`[graphqlRequest()] Started.`, document, variables);\n\n      try {\n        const data = yield this.apiClient.request(document, variables);\n        this.logger.debug(`[graphqlRequest()] Completed.`);\n        return data;\n      } catch (err) {\n        this.logger.debug(`[graphqlRequest()] An error ocurred.`, err);\n        graphql_1.graphqlService.handleRequestErrors({\n          err\n        });\n      }\n      /** This should never be hit - adding it for TS purposes. */\n\n\n      throw new runtime_1.RuntimeError();\n    });\n  }\n\n}\n\nexports.MemClient = MemClient;","map":{"version":3,"sources":["../../src/mem-client/MemClient.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,MAAA,SAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAGA,MAAa,SAAb,CAAsB;AAIpB,EAAA,WAAA,CAAY;AAAE,IAAA,WAAW,GAAG,WAAA,CAAA,qBAAhB;AAAuC,IAAA,cAAvC;AAAuD,IAAA;AAAvD,GAAZ,EAA8F;AA+C9F,SAAA,WAAA,GAAc,aAAA,CAAA,oBAAA,CAAqB;AAAE,MAAA,SAAS,EAAE;AAAb,KAArB,CAAd;AAEA,SAAA,SAAA,GAAY,WAAA,CAAA,kBAAA,CAAmB;AAAE,MAAA,SAAS,EAAE;AAAb,KAAnB,CAAZ;AAEA,SAAA,eAAA,GAAkB,iBAAA,CAAA,wBAAA,CAAyB;AAAE,MAAA,SAAS,EAAE;AAAb,KAAzB,CAAlB;AAlDE,SAAK,MAAL,GAAc,IAAI,QAAA,CAAA,MAAJ,CAAW;AACvB,MAAA,KAAK,EAAE;AADgB,KAAX,CAAd;;AAIA,QAAI,CAAC,cAAL,EAAqB;AACnB,YAAM,IAAI,MAAA,CAAA,yBAAJ,CAA8B;AAClC,QAAA,OAAO,EAAE;AADyB,OAA9B,CAAN;AAGD;;AAED,UAAM,cAAc,GAAG;AACrB,sBAAgB,kBADK;AAErB,MAAA,aAAa,EAAE,GAAG,WAAA,CAAA,6BAA6B,IAAI,cAAc;AAF5C,KAAvB;AAKA,SAAK,SAAL,GAAiB,IAAI,iBAAA,CAAA,aAAJ,CAAkB,WAAlB,EAA+B;AAC9C,MAAA,OAAO,EAAE;AADqC,KAA/B,CAAjB;AAIA,SAAK,MAAL,CAAY,KAAZ,CAAkB,wCAAlB;AACD;;AAEK,EAAA,cAAc,CAClB,QADkB,EAElB,SAFkB,EAEI;;AAEtB,WAAK,MAAL,CAAY,KAAZ,CAAkB,6BAAlB,EAAiD,QAAjD,EAA2D,SAA3D;;AAEA,UAAI;AACF,cAAM,IAAI,GAAG,MAAM,KAAK,SAAL,CAAe,OAAf,CAA4C,QAA5C,EAAsD,SAAtD,CAAnB;AAEA,aAAK,MAAL,CAAY,KAAZ,CAAkB,+BAAlB;AAEA,eAAO,IAAP;AACD,OAND,CAME,OAAO,GAAP,EAAY;AACZ,aAAK,MAAL,CAAY,KAAZ,CAAkB,sCAAlB,EAA0D,GAA1D;AAEA,QAAA,SAAA,CAAA,cAAA,CAAe,mBAAf,CAAmC;AACjC,UAAA;AADiC,SAAnC;AAGD;AAED;;;AACA,YAAM,IAAI,SAAA,CAAA,YAAJ,EAAN;AACD,K;AAAA;;AAjDmB;;AAAtB,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MemClient = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nconst graphql_1 = require(\"../services/mock-server/graphql\");\nconst base_1 = require(\"../utils/errors/base\");\nconst runtime_1 = require(\"../utils/errors/runtime\");\nconst logger_1 = require(\"../utils/logger\");\nconst constants_1 = require(\"./constants\");\nconst batchCreateMems_1 = require(\"./methods/batchCreateMems\");\nconst createMem_1 = require(\"./methods/createMem\");\nconst healthCheck_1 = require(\"./methods/healthCheck\");\nclass MemClient {\n    constructor({ apiEndpoint = constants_1.defaultMemApiEndpoint, apiAccessToken, logLevel }) {\n        this.healthCheck = healthCheck_1.memClientHealthCheck({ memClient: this });\n        this.createMem = createMem_1.memClientCreateMem({ memClient: this });\n        this.batchCreateMems = batchCreateMems_1.memClientBatchCreateMems({ memClient: this });\n        this.logger = new logger_1.Logger({\n            level: logLevel,\n        });\n        if (!apiAccessToken) {\n            throw new base_1.ClientInitializationError({\n                message: \"An `apiAccessToken` must be provided when initializing the MemClient.\",\n            });\n        }\n        const defaultHeaders = {\n            \"Content-Type\": \"application/json\",\n            Authorization: `${constants_1.defaultMemAuthorizationScheme} ${apiAccessToken}`,\n        };\n        this.apiClient = new graphql_request_1.GraphQLClient(apiEndpoint, {\n            headers: defaultHeaders,\n        });\n        this.logger.debug(`[constructor()] MemClient Initialized.`);\n    }\n    graphqlRequest(document, variables) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.debug(`[graphqlRequest()] Started.`, document, variables);\n            try {\n                const data = yield this.apiClient.request(document, variables);\n                this.logger.debug(`[graphqlRequest()] Completed.`);\n                return data;\n            }\n            catch (err) {\n                this.logger.debug(`[graphqlRequest()] An error ocurred.`, err);\n                graphql_1.graphqlService.handleRequestErrors({\n                    err,\n                });\n            }\n            /** This should never be hit - adding it for TS purposes. */\n            throw new runtime_1.RuntimeError();\n        });\n    }\n}\nexports.MemClient = MemClient;\n//# sourceMappingURL=MemClient.js.map"]},"metadata":{},"sourceType":"script"}