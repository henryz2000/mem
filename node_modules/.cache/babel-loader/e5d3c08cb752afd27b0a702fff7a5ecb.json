{"ast":null,"code":"// @ts-nocheck\nbrightscript.displayName = 'brightscript';\nbrightscript.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n\n        }\n      }\n    },\n    property: {\n      pattern: /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator: /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  };\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside = Prism.languages.brightscript;\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/brightscript.js"],"names":["brightscript","displayName","aliases","Prism","languages","comment","pattern","lookbehind","alias","inside","directive","expression","property","greedy","string","keyword","boolean","function","number","operator","punctuation","constant"],"mappings":"AAAA;AACAA,YAAY,CAACC,WAAb,GAA2B,cAA3B;AACAD,YAAY,CAACE,OAAb,GAAuB,EAAvB;AAEA;;AACA,eAAe,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;AAC1CA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,YAAhB,GAA+B;AAC7BK,IAAAA,OAAO,EAAE,gBADoB;AAE7B,2BAAuB;AACrBC,MAAAA,OAAO,EAAE,gEADY;AAErBC,MAAAA,UAAU,EAAE,IAFS;AAGrBC,MAAAA,KAAK,EAAE,UAHc;AAIrBC,MAAAA,MAAM,EAAE;AACN,yBAAiB;AACfH,UAAAA,OAAO,EAAE,aADM;AAEfC,UAAAA,UAAU,EAAE;AAFG,SADX;AAKNG,QAAAA,SAAS,EAAE;AACTJ,UAAAA,OAAO,EAAE,oDADA;AAETE,UAAAA,KAAK,EAAE;AAFE,SALL;AASNG,QAAAA,UAAU,EAAE;AACVL,UAAAA,OAAO,EAAE,SADC;AAEVG,UAAAA,MAAM,EAAE,IAFE,CAEG;;AAFH;AATN;AAJa,KAFM;AAsB7BG,IAAAA,QAAQ,EAAE;AACRN,MAAAA,OAAO,EACL,kEAFM;AAGRC,MAAAA,UAAU,EAAE,IAHJ;AAIRM,MAAAA,MAAM,EAAE;AAJA,KAtBmB;AA4B7BC,IAAAA,MAAM,EAAE;AACNR,MAAAA,OAAO,EAAE,yBADH;AAENO,MAAAA,MAAM,EAAE;AAFF,KA5BqB;AAgC7B,kBAAc;AACZP,MAAAA,OAAO,EAAE,kBADG;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAhCe;AAoC7BQ,IAAAA,OAAO,EACL,4GArC2B;AAsC7BC,IAAAA,OAAO,EAAE,qBAtCoB;AAuC7BC,IAAAA,QAAQ,EAAE,yBAvCmB;AAwC7BC,IAAAA,MAAM,EAAE,0DAxCqB;AAyC7BC,IAAAA,QAAQ,EACN,kEA1C2B;AA2C7BC,IAAAA,WAAW,EAAE,cA3CgB;AA4C7BC,IAAAA,QAAQ,EAAE;AA5CmB,GAA/B;AA8CAlB,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,YAAhB,CAA6B,qBAA7B,EAAoDS,MAApD,CAA2DE,UAA3D,CAAsEF,MAAtE,GACEN,KAAK,CAACC,SAAN,CAAgBJ,YADlB;AAED","sourcesContent":["// @ts-nocheck\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n"]},"metadata":{},"sourceType":"module"}