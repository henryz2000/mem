{"ast":null,"code":"// @ts-nocheck\nimport refractorJava from './java.js';\nscala.displayName = 'scala';\nscala.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function scala(Prism) {\n  Prism.register(refractorJava);\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\\b/,\n    number: /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin: /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  });\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern: /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  delete Prism.languages.scala['class-name'];\n  delete Prism.languages.scala['function'];\n  delete Prism.languages.scala['constant'];\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/scala.js"],"names":["refractorJava","scala","displayName","aliases","Prism","register","languages","extend","pattern","greedy","alias","string","keyword","number","builtin","symbol","insertBefore","inside","id","escape","interpolation","punctuation","expression"],"mappings":"AAAA;AACA,OAAOA,aAAP,MAA0B,WAA1B;AACAC,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;AAEA;;AACA,eAAe,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACnCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,aAAf;AACAI,EAAAA,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB,EAA+B;AACrD,4BAAwB;AACtBC,MAAAA,OAAO,EAAE,gBADa;AAEtBC,MAAAA,MAAM,EAAE,IAFc;AAGtBC,MAAAA,KAAK,EAAE;AAHe,KAD6B;AAMrDC,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EAAE,iCADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAN6C;AAUrDG,IAAAA,OAAO,EACL,4TAXmD;AAYrDC,IAAAA,MAAM,EACJ,yEAbmD;AAcrDC,IAAAA,OAAO,EACL,6FAfmD;AAgBrDC,IAAAA,MAAM,EAAE;AAhB6C,GAA/B,CAAxB;AAkBAX,EAAAA,KAAK,CAACE,SAAN,CAAgBU,YAAhB,CAA6B,OAA7B,EAAsC,sBAAtC,EAA8D;AAC5D,4BAAwB;AACtBR,MAAAA,OAAO,EACL,4HAFoB;AAGtBC,MAAAA,MAAM,EAAE,IAHc;AAItBQ,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE;AACFV,UAAAA,OAAO,EAAE,MADP;AAEFC,UAAAA,MAAM,EAAE,IAFN;AAGFC,UAAAA,KAAK,EAAE;AAHL,SADE;AAMNS,QAAAA,MAAM,EAAE;AACNX,UAAAA,OAAO,EAAE,cADH;AAENC,UAAAA,MAAM,EAAE,IAFF;AAGNC,UAAAA,KAAK,EAAE;AAHD,SANF;AAWNU,QAAAA,aAAa,EAAE;AACbZ,UAAAA,OAAO,EAAE,qCADI;AAEbC,UAAAA,MAAM,EAAE,IAFK;AAGbQ,UAAAA,MAAM,EAAE;AACNI,YAAAA,WAAW,EAAE,YADP;AAENC,YAAAA,UAAU,EAAE;AACVd,cAAAA,OAAO,EAAE,SADC;AAEVS,cAAAA,MAAM,EAAEb,KAAK,CAACE,SAAN,CAAgBL;AAFd;AAFN;AAHK,SAXT;AAsBNU,QAAAA,MAAM,EAAE;AAtBF;AAJc;AADoC,GAA9D;AA+BA,SAAOP,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,YAAtB,CAAP;AACA,SAAOG,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,UAAtB,CAAP;AACA,SAAOG,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,UAAtB,CAAP;AACD","sourcesContent":["// @ts-nocheck\nimport refractorJava from './java.js'\nscala.displayName = 'scala'\nscala.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n  delete Prism.languages.scala['constant']\n}\n"]},"metadata":{},"sourceType":"module"}