{"ast":null,"code":"// @ts-nocheck\nrescript.displayName = 'rescript';\nrescript.aliases = ['res'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function rescript(Prism) {\n  Prism.languages.rescript = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'class-name': /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\n    function: {\n      pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\n      lookbehind: true\n    },\n    number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    boolean: /\\b(?:false|true)\\b/,\n    'attr-value': /[A-Za-z]\\w*(?==)/,\n    constant: {\n      pattern: /(\\btype\\s+)[a-z]\\w*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\n      lookbehind: true,\n      inside: {\n        operator: /<|>|\\//\n      }\n    },\n    keyword: /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\n    punctuation: /[(){}[\\],;.]/\n  };\n  Prism.languages.insertBefore('rescript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.rescript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  Prism.languages.res = Prism.languages.rescript;\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/rescript.js"],"names":["rescript","displayName","aliases","Prism","languages","comment","pattern","greedy","char","string","function","lookbehind","number","boolean","constant","tag","inside","operator","keyword","punctuation","insertBefore","alias","interpolation","rest","res"],"mappings":"AAAA;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,CAAC,KAAD,CAAnB;AAEA;;AACA,eAAe,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AACtCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2B;AACzBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,+BADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADgB;AAKzBC,IAAAA,IAAI,EAAE;AACJF,MAAAA,OAAO,EAAE,6BADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KALmB;AASzBE,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EAAE,qCADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KATiB;AAazB,kBAAc,sCAbW;AAczBG,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,OAAO,EAAE,gCADD;AAERK,MAAAA,UAAU,EAAE;AAFJ,KAde;AAkBzBC,IAAAA,MAAM,EACJ,mHAnBuB;AAoBzBC,IAAAA,OAAO,EAAE,oBApBgB;AAqBzB,kBAAc,kBArBW;AAsBzBC,IAAAA,QAAQ,EAAE;AACRR,MAAAA,OAAO,EAAE,qBADD;AAERK,MAAAA,UAAU,EAAE;AAFJ,KAtBe;AA0BzBI,IAAAA,GAAG,EAAE;AACHT,MAAAA,OAAO,EAAE,6BADN;AAEHK,MAAAA,UAAU,EAAE,IAFT;AAGHK,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AAHL,KA1BoB;AAiCzBC,IAAAA,OAAO,EACL,kRAlCuB;AAmCzBD,IAAAA,QAAQ,EACN,sGApCuB;AAqCzBE,IAAAA,WAAW,EAAE;AArCY,GAA3B;AAuCAhB,EAAAA,KAAK,CAACC,SAAN,CAAgBgB,YAAhB,CAA6B,UAA7B,EAAyC,QAAzC,EAAmD;AACjD,uBAAmB;AACjBd,MAAAA,OAAO,EACL,0EAFe;AAGjBC,MAAAA,MAAM,EAAE,IAHS;AAIjBS,MAAAA,MAAM,EAAE;AACN,gCAAwB;AACtBV,UAAAA,OAAO,EAAE,OADa;AAEtBe,UAAAA,KAAK,EAAE;AAFe,SADlB;AAKNC,QAAAA,aAAa,EAAE;AACbhB,UAAAA,OAAO,EACL,kEAFW;AAGbK,UAAAA,UAAU,EAAE,IAHC;AAIbK,UAAAA,MAAM,EAAE;AACN,yCAA6B;AAC3BV,cAAAA,OAAO,EAAE,WADkB;AAE3Be,cAAAA,KAAK,EAAE;AAFoB,aADvB;AAKNE,YAAAA,IAAI,EAAEpB,KAAK,CAACC,SAAN,CAAgBJ;AALhB;AAJK,SALT;AAiBNS,QAAAA,MAAM,EAAE;AAjBF;AAJS;AAD8B,GAAnD;AA0BAN,EAAAA,KAAK,CAACC,SAAN,CAAgBoB,GAAhB,GAAsBrB,KAAK,CAACC,SAAN,CAAgBJ,QAAtC;AACD","sourcesContent":["// @ts-nocheck\nrescript.displayName = 'rescript'\nrescript.aliases = ['res']\n\n/** @type {import('../core.js').Syntax} */\nexport default function rescript(Prism) {\n  Prism.languages.rescript = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'class-name': /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\n    function: {\n      pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\n      lookbehind: true\n    },\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    boolean: /\\b(?:false|true)\\b/,\n    'attr-value': /[A-Za-z]\\w*(?==)/,\n    constant: {\n      pattern: /(\\btype\\s+)[a-z]\\w*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\n      lookbehind: true,\n      inside: {\n        operator: /<|>|\\//\n      }\n    },\n    keyword:\n      /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\n    punctuation: /[(){}[\\],;.]/\n  }\n  Prism.languages.insertBefore('rescript', 'string', {\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.rescript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.res = Prism.languages.rescript\n}\n"]},"metadata":{},"sourceType":"module"}