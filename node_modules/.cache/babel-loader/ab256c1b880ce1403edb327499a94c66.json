{"ast":null,"code":"// @ts-nocheck\neiffel.displayName = 'eiffel';\neiffel.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [// Aligned-verbatim-strings\n    {\n      pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n      greedy: true\n    }, // Non-aligned-verbatim-strings\n    {\n      pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n      greedy: true\n    }, // Single-line string\n    {\n      pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n      greedy: true\n    }],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword: /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [// hexa | octal | bin\n    /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n    /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  };\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/eiffel.js"],"names":["eiffel","displayName","aliases","Prism","languages","comment","string","pattern","greedy","char","keyword","boolean","number","punctuation","operator"],"mappings":"AAAA;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACpCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,IAAAA,OAAO,EAAE,MADc;AAEvBC,IAAAA,MAAM,EAAE,CACN;AACA;AACEC,MAAAA,OAAO,EAAE,yBADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KAFM,EAMN;AACA;AACED,MAAAA,OAAO,EAAE,yBADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KAPM,EAWN;AACA;AACED,MAAAA,OAAO,EAAE,2CADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KAZM,CAFe;AAmBvB;AACAC,IAAAA,IAAI,EAAE,qBApBiB;AAqBvBC,IAAAA,OAAO,EACL,8YAtBqB;AAuBvBC,IAAAA,OAAO,EAAE,qBAvBc;AAwBvB;AACA,kBAAc,oBAzBS;AA0BvBC,IAAAA,MAAM,EAAE,CACN;AACA,sCAFM,EAGN;AACA,sFAJM,CA1Be;AAgCvBC,IAAAA,WAAW,EAAE,8CAhCU;AAiCvBC,IAAAA,QAAQ,EAAE;AAjCa,GAAzB;AAmCD","sourcesContent":["// @ts-nocheck\neiffel.displayName = 'eiffel'\neiffel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n"]},"metadata":{},"sourceType":"module"}