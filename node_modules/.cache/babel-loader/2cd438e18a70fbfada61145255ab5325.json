{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Fragment, useContext, useEffect, useRef } from 'react';\nimport { EditorContext } from '../../Context';\nimport Child from './Child';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ToolbarItems(props) {\n  var prefixCls = props.prefixCls,\n      overflow = props.overflow;\n\n  var _useContext = useContext(EditorContext),\n      fullscreen = _useContext.fullscreen,\n      preview = _useContext.preview,\n      _useContext$barPopup = _useContext.barPopup,\n      barPopup = _useContext$barPopup === void 0 ? {} : _useContext$barPopup,\n      components = _useContext.components,\n      commandOrchestrator = _useContext.commandOrchestrator,\n      dispatch = _useContext.dispatch;\n\n  var originalOverflow = useRef('');\n\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _extends({}, barPopup)\n    };\n\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(function (item) {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(function (keyName) {\n        state.barPopup[keyName] = false;\n      });\n    }\n\n    if (Object.keys(state).length) {\n      dispatch(_extends({}, state));\n    }\n\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n\n  useEffect(function () {\n    if (document && overflow) {\n      if (fullscreen) {\n        // prevent scroll on fullscreen\n        document.body.style.overflow = 'hidden';\n      } else {\n        // get the original overflow only the first time\n        if (!originalOverflow.current) {\n          originalOverflow.current = window.getComputedStyle(document.body, null).overflow;\n        } // reset to the original overflow\n\n\n        document.body.style.overflow = originalOverflow.current;\n      }\n    }\n  }, [fullscreen, originalOverflow, overflow]);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: (props.commands || []).map(function (item, idx) {\n      if (item.keyCommand === 'divider') {\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\n          className: prefixCls + \"-toolbar-divider\"\n        }), idx);\n      }\n\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {}, idx);\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\n        getState: function getState() {\n          return commandOrchestrator.getState();\n        },\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n        close: function close() {\n          return handleClick({}, item.groupName);\n        },\n        execute: function execute() {\n          return handleClick({\n            execute: item.execute\n          });\n        },\n        dispatch: dispatch\n      }) : undefined;\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n      var render = (components == null ? void 0 : components.toolbar) || item.render;\n      var com = render && typeof render === 'function' ? render(item, !!disabled, handleClick, idx) : null;\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\n        className: activeBtn ? \"active\" : '',\n        children: [com && /*#__PURE__*/React.isValidElement(com) && com, !com && !item.buttonProps && item.icon, !com && item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\n          type: 'button',\n          key: idx,\n          disabled: disabled,\n          'data-name': item.name\n        }, item.buttonProps, {\n          onClick: function onClick(evn) {\n            evn.stopPropagation();\n            handleClick(item, item.groupName);\n          }\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\n          overflow: overflow,\n          groupName: item.groupName,\n          prefixCls: prefixCls,\n          children: childNode,\n          commands: Array.isArray(item.children) ? item.children : undefined\n        })]\n      }), idx);\n    })\n  });\n}\nexport default function Toolbar(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      prefixCls = _props.prefixCls,\n      toolbarBottom = _props.toolbarBottom,\n      isChild = _props.isChild;\n\n  var _useContext2 = useContext(EditorContext),\n      commands = _useContext2.commands,\n      extraCommands = _useContext2.extraCommands;\n\n  var bottomClassName = toolbarBottom ? 'bottom' : '';\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: prefixCls + \"-toolbar \" + bottomClassName,\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: props.commands || commands || []\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: extraCommands || []\n    }))]\n  });\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@uiw/react-md-editor/esm/components/Toolbar/index.js"],"names":["_extends","React","Fragment","useContext","useEffect","useRef","EditorContext","Child","jsx","_jsx","jsxs","_jsxs","ToolbarItems","props","prefixCls","overflow","fullscreen","preview","barPopup","components","commandOrchestrator","dispatch","originalOverflow","handleClick","command","name","state","keyCommand","value","commands","forEach","item","groupName","parent","Object","keys","keyName","length","executeCommand","document","body","style","current","window","getComputedStyle","children","map","idx","liProps","className","activeBtn","childNode","getState","textApi","undefined","close","execute","disabled","test","render","toolbar","com","isValidElement","buttonProps","icon","createElement","type","key","onClick","evn","stopPropagation","Array","isArray","Toolbar","toolbarBottom","isChild","extraCommands","bottomClassName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,MACEC,SADF,GAGID,KAHJ,CACEC,SADF;AAAA,MAEEC,QAFF,GAGIF,KAHJ,CAEEE,QAFF;;AAIA,oBAOIZ,UAAU,CAACG,aAAD,CAPd;AAAA,MACEU,UADF,eACEA,UADF;AAAA,MAEEC,OAFF,eAEEA,OAFF;AAAA,yCAGEC,QAHF;AAAA,MAGEA,QAHF,qCAGa,EAHb;AAAA,MAIEC,UAJF,eAIEA,UAJF;AAAA,MAKEC,mBALF,eAKEA,mBALF;AAAA,MAMEC,QANF,eAMEA,QANF;;AAQA,MAAIC,gBAAgB,GAAGjB,MAAM,CAAC,EAAD,CAA7B;;AACA,WAASkB,WAAT,CAAqBC,OAArB,EAA8BC,IAA9B,EAAoC;AAClC,QAAI,CAACJ,QAAL,EAAe;AACf,QAAIK,KAAK,GAAG;AACVR,MAAAA,QAAQ,EAAElB,QAAQ,CAAC,EAAD,EAAKkB,QAAL;AADR,KAAZ;;AAGA,QAAIM,OAAO,CAACG,UAAR,KAAuB,SAA3B,EAAsC;AACpCD,MAAAA,KAAK,CAACT,OAAN,GAAgBO,OAAO,CAACI,KAAxB;AACD;;AACD,QAAIJ,OAAO,CAACG,UAAR,KAAuB,YAA3B,EAAyC;AACvCD,MAAAA,KAAK,CAACV,UAAN,GAAmB,CAACA,UAApB;AACD;;AACD,QAAIH,KAAK,CAACgB,QAAN,IAAkBL,OAAO,CAACG,UAAR,KAAuB,OAA7C,EAAsD;AACpDd,MAAAA,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,YAAIN,IAAI,KAAKM,IAAI,CAACC,SAAlB,EAA6B;AAC3BN,UAAAA,KAAK,CAACR,QAAN,CAAeO,IAAf,IAAuB,IAAvB;AACD,SAFD,MAEO,IAAIM,IAAI,CAACJ,UAAT,EAAqB;AAC1BD,UAAAA,KAAK,CAACR,QAAN,CAAea,IAAI,CAACC,SAApB,IAAiC,KAAjC;AACD;AACF,OAND;AAOD,KARD,MAQO,IAAIP,IAAI,IAAID,OAAO,CAACS,MAApB,EAA4B;AACjCC,MAAAA,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACR,QAAN,IAAkB,EAA9B,EAAkCY,OAAlC,CAA0C,UAAAM,OAAO,EAAI;AACnDV,QAAAA,KAAK,CAACR,QAAN,CAAekB,OAAf,IAA0B,KAA1B;AACD,OAFD;AAGD;;AACD,QAAIF,MAAM,CAACC,IAAP,CAAYT,KAAZ,EAAmBW,MAAvB,EAA+B;AAC7BhB,MAAAA,QAAQ,CAACrB,QAAQ,CAAC,EAAD,EAAK0B,KAAL,CAAT,CAAR;AACD;;AACDN,IAAAA,mBAAmB,IAAIA,mBAAmB,CAACkB,cAApB,CAAmCd,OAAnC,CAAvB;AACD;;AACDpB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAImC,QAAQ,IAAIxB,QAAhB,EAA0B;AACxB,UAAIC,UAAJ,EAAgB;AACd;AACAuB,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB1B,QAApB,GAA+B,QAA/B;AACD,OAHD,MAGO;AACL;AACA,YAAI,CAACO,gBAAgB,CAACoB,OAAtB,EAA+B;AAC7BpB,UAAAA,gBAAgB,CAACoB,OAAjB,GAA2BC,MAAM,CAACC,gBAAP,CAAwBL,QAAQ,CAACC,IAAjC,EAAuC,IAAvC,EAA6CzB,QAAxE;AACD,SAJI,CAKL;;;AACAwB,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB1B,QAApB,GAA+BO,gBAAgB,CAACoB,OAAhD;AACD;AACF;AACF,GAdQ,EAcN,CAAC1B,UAAD,EAAaM,gBAAb,EAA+BP,QAA/B,CAdM,CAAT;AAeA,SAAO,aAAaN,IAAI,CAAC,IAAD,EAAO;AAC7BoC,IAAAA,QAAQ,EAAE,CAAChC,KAAK,CAACgB,QAAN,IAAkB,EAAnB,EAAuBiB,GAAvB,CAA2B,UAACf,IAAD,EAAOgB,GAAP,EAAe;AAClD,UAAIhB,IAAI,CAACJ,UAAL,KAAoB,SAAxB,EAAmC;AACjC,eAAO,aAAalB,IAAI,CAAC,IAAD,EAAOT,QAAQ,CAAC,EAAD,EAAK+B,IAAI,CAACiB,OAAV,EAAmB;AACxDC,UAAAA,SAAS,EAAEnC,SAAS,GAAG;AADiC,SAAnB,CAAf,EAEpBiC,GAFoB,CAAxB;AAGD;;AACD,UAAI,CAAChB,IAAI,CAACJ,UAAV,EAAsB,OAAO,aAAalB,IAAI,CAACP,QAAD,EAAW,EAAX,EAAe6C,GAAf,CAAxB;AACtB,UAAIG,SAAS,GAAGlC,UAAU,IAAIe,IAAI,CAACJ,UAAL,KAAoB,YAAlC,IAAkDI,IAAI,CAACJ,UAAL,KAAoB,SAApB,IAAiCV,OAAO,KAAKc,IAAI,CAACH,KAApH;AACA,UAAIuB,SAAS,GAAGpB,IAAI,CAACc,QAAL,IAAiB,OAAOd,IAAI,CAACc,QAAZ,KAAyB,UAA1C,GAAuDd,IAAI,CAACc,QAAL,CAAc;AACnFO,QAAAA,QAAQ,EAAE;AAAA,iBAAMhC,mBAAmB,CAACgC,QAApB,EAAN;AAAA,SADyE;AAEnFC,QAAAA,OAAO,EAAEjC,mBAAmB,GAAGA,mBAAmB,CAACiC,OAAvB,GAAiCC,SAFsB;AAGnFC,QAAAA,KAAK,EAAE;AAAA,iBAAMhC,WAAW,CAAC,EAAD,EAAKQ,IAAI,CAACC,SAAV,CAAjB;AAAA,SAH4E;AAInFwB,QAAAA,OAAO,EAAE;AAAA,iBAAMjC,WAAW,CAAC;AACzBiC,YAAAA,OAAO,EAAEzB,IAAI,CAACyB;AADW,WAAD,CAAjB;AAAA,SAJ0E;AAOnFnC,QAAAA,QAAQ,EAARA;AAPmF,OAAd,CAAvD,GAQXiC,SARL;AASA,UAAIG,QAAQ,GAAGvC,QAAQ,IAAID,OAAZ,IAAuBA,OAAO,KAAK,SAAnC,IAAgD,CAAC,uBAAuByC,IAAvB,CAA4B3B,IAAI,CAACJ,UAAjC,CAAhE;AACA,UAAIgC,MAAM,GAAG,CAACxC,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACyC,OAA1C,KAAsD7B,IAAI,CAAC4B,MAAxE;AACA,UAAIE,GAAG,GAAGF,MAAM,IAAI,OAAOA,MAAP,KAAkB,UAA5B,GAAyCA,MAAM,CAAC5B,IAAD,EAAO,CAAC,CAAC0B,QAAT,EAAmBlC,WAAnB,EAAgCwB,GAAhC,CAA/C,GAAsF,IAAhG;AACA,aAAO,aAAapC,KAAK,CAAC,IAAD,EAAOX,QAAQ,CAAC,EAAD,EAAK+B,IAAI,CAACiB,OAAV,EAAmB;AACzDC,QAAAA,SAAS,EAAEC,SAAS,GAAG,QAAH,GAAc,EADuB;AAEzDL,QAAAA,QAAQ,EAAE,CAACgB,GAAG,IAAI,aAAa5D,KAAK,CAAC6D,cAAN,CAAqBD,GAArB,CAApB,IAAiDA,GAAlD,EAAuD,CAACA,GAAD,IAAQ,CAAC9B,IAAI,CAACgC,WAAd,IAA6BhC,IAAI,CAACiC,IAAzF,EAA+F,CAACH,GAAD,IAAQ9B,IAAI,CAACgC,WAAb,IAA4B,aAAa9D,KAAK,CAACgE,aAAN,CAAoB,QAApB,EAA8BjE,QAAQ,CAAC;AACvLkE,UAAAA,IAAI,EAAE,QADiL;AAEvLC,UAAAA,GAAG,EAAEpB,GAFkL;AAGvLU,UAAAA,QAAQ,EAARA,QAHuL;AAIvL,uBAAa1B,IAAI,CAACN;AAJqK,SAAD,EAKrLM,IAAI,CAACgC,WALgL,EAKnK;AACnBK,UAAAA,OAAO,EAAE,iBAAAC,GAAG,EAAI;AACdA,YAAAA,GAAG,CAACC,eAAJ;AACA/C,YAAAA,WAAW,CAACQ,IAAD,EAAOA,IAAI,CAACC,SAAZ,CAAX;AACD;AAJkB,SALmK,CAAtC,EAU9ID,IAAI,CAACiC,IAVyI,CAAxI,EAUMjC,IAAI,CAACc,QAAL,IAAiB,aAAapC,IAAI,CAACF,KAAD,EAAQ;AACxDQ,UAAAA,QAAQ,EAAEA,QAD8C;AAExDiB,UAAAA,SAAS,EAAED,IAAI,CAACC,SAFwC;AAGxDlB,UAAAA,SAAS,EAAEA,SAH6C;AAIxD+B,UAAAA,QAAQ,EAAEM,SAJ8C;AAKxDtB,UAAAA,QAAQ,EAAE0C,KAAK,CAACC,OAAN,CAAczC,IAAI,CAACc,QAAnB,IAA+Bd,IAAI,CAACc,QAApC,GAA+CS;AALD,SAAR,CAVxC;AAF+C,OAAnB,CAAf,EAmBrBP,GAnBqB,CAAzB;AAoBD,KAxCS;AADmB,GAAP,CAAxB;AA2CD;AACD,eAAe,SAAS0B,OAAT,CAAiB5D,KAAjB,EAAwB;AACrC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAG,EAAR;AACD;;AACD,eAIIA,KAJJ;AAAA,MACEC,SADF,UACEA,SADF;AAAA,MAEE4D,aAFF,UAEEA,aAFF;AAAA,MAGEC,OAHF,UAGEA,OAHF;;AAKA,qBAGIxE,UAAU,CAACG,aAAD,CAHd;AAAA,MACEuB,QADF,gBACEA,QADF;AAAA,MAEE+C,aAFF,gBAEEA,aAFF;;AAIA,MAAIC,eAAe,GAAGH,aAAa,GAAG,QAAH,GAAc,EAAjD;AACA,SAAO,aAAa/D,KAAK,CAAC,KAAD,EAAQ;AAC/BsC,IAAAA,SAAS,EAAEnC,SAAS,GAAG,WAAZ,GAA0B+D,eADN;AAE/BhC,IAAAA,QAAQ,EAAE,CAAC,aAAapC,IAAI,CAACG,YAAD,EAAeZ,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AAC7DgB,MAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QAAN,IAAkBA,QAAlB,IAA8B;AADqB,KAAZ,CAAvB,CAAlB,EAEL,CAAC8C,OAAD,IAAY,aAAalE,IAAI,CAACG,YAAD,EAAeZ,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AACnEgB,MAAAA,QAAQ,EAAE+C,aAAa,IAAI;AADwC,KAAZ,CAAvB,CAFxB;AAFqB,GAAR,CAAzB;AAQD","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Fragment, useContext, useEffect, useRef } from 'react';\nimport { EditorContext } from '../../Context';\nimport Child from './Child';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ToolbarItems(props) {\n  var {\n    prefixCls,\n    overflow\n  } = props;\n  var {\n    fullscreen,\n    preview,\n    barPopup = {},\n    components,\n    commandOrchestrator,\n    dispatch\n  } = useContext(EditorContext);\n  var originalOverflow = useRef('');\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _extends({}, barPopup)\n    };\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(item => {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(keyName => {\n        state.barPopup[keyName] = false;\n      });\n    }\n    if (Object.keys(state).length) {\n      dispatch(_extends({}, state));\n    }\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n  useEffect(() => {\n    if (document && overflow) {\n      if (fullscreen) {\n        // prevent scroll on fullscreen\n        document.body.style.overflow = 'hidden';\n      } else {\n        // get the original overflow only the first time\n        if (!originalOverflow.current) {\n          originalOverflow.current = window.getComputedStyle(document.body, null).overflow;\n        }\n        // reset to the original overflow\n        document.body.style.overflow = originalOverflow.current;\n      }\n    }\n  }, [fullscreen, originalOverflow, overflow]);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: (props.commands || []).map((item, idx) => {\n      if (item.keyCommand === 'divider') {\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\n          className: prefixCls + \"-toolbar-divider\"\n        }), idx);\n      }\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {}, idx);\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\n        getState: () => commandOrchestrator.getState(),\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n        close: () => handleClick({}, item.groupName),\n        execute: () => handleClick({\n          execute: item.execute\n        }),\n        dispatch\n      }) : undefined;\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n      var render = (components == null ? void 0 : components.toolbar) || item.render;\n      var com = render && typeof render === 'function' ? render(item, !!disabled, handleClick, idx) : null;\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\n        className: activeBtn ? \"active\" : '',\n        children: [com && /*#__PURE__*/React.isValidElement(com) && com, !com && !item.buttonProps && item.icon, !com && item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\n          type: 'button',\n          key: idx,\n          disabled,\n          'data-name': item.name\n        }, item.buttonProps, {\n          onClick: evn => {\n            evn.stopPropagation();\n            handleClick(item, item.groupName);\n          }\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\n          overflow: overflow,\n          groupName: item.groupName,\n          prefixCls: prefixCls,\n          children: childNode,\n          commands: Array.isArray(item.children) ? item.children : undefined\n        })]\n      }), idx);\n    })\n  });\n}\nexport default function Toolbar(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n    prefixCls,\n    toolbarBottom,\n    isChild\n  } = props;\n  var {\n    commands,\n    extraCommands\n  } = useContext(EditorContext);\n  var bottomClassName = toolbarBottom ? 'bottom' : '';\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: prefixCls + \"-toolbar \" + bottomClassName,\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: props.commands || commands || []\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: extraCommands || []\n    }))]\n  });\n}"]},"metadata":{},"sourceType":"module"}