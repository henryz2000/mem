{"ast":null,"code":"import _slicedToArray from\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import\"./App.css\";import{MemClient}from\"@mem-labs/mem-node\";import MDEditor from\"@uiw/react-md-editor\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var memClient=new MemClient({apiAccessToken:\"5436519d-2a67-44ac-a1e0-f2952a2c2953\"});function App(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),content=_React$useState2[0],setContent=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),tags=_React$useState4[0],setTags=_React$useState4[1];var createMem=function createMem(){memClient.createMem({content:content||\"\"});};React.useEffect(function(){/**\n     * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n     * For sending messages from React we need to specify which tab to send it to.\n     */chrome.tabs&&chrome.tabs.query({active:true,currentWindow:true},function(tabs){/**\n           * Sends a single message to the content script(s) in the specified tab,\n           * with an optional callback to run when a response is sent back.\n           *\n           * The runtime.onMessage event is fired in each content script running\n           * in the specified tab for the current extension.\n           */chrome.tabs.sendMessage(tabs[0].id||0,{type:\"GET_DOM\"},function(response){setContent(response.content);});});},[]);var regex=\"B(?<!#)(#[a-zA-Z0-9_]+\\b)\";return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mem Chrome Extension\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createMem,children:\"Add to Mem\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(MDEditor,{value:content,onChange:function onChange(val,e,test){console.log(val);console.log(e);console.log(test);setContent(val);setTags(val.match(regex));}})}),tags===null||tags===void 0?void 0:tags.map(function(tag){return/*#__PURE__*/_jsx(\"h1\",{children:tag});}),content]});}export default App;","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/src/App.tsx"],"names":["React","MemClient","MDEditor","memClient","apiAccessToken","App","useState","content","setContent","tags","setTags","createMem","useEffect","chrome","tabs","query","active","currentWindow","sendMessage","id","type","response","regex","val","e","test","console","log","match","map","tag"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CAEA,OAASC,SAAT,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,GAAIF,CAAAA,SAAJ,CAAc,CAC9BG,cAAc,CAAE,sCADc,CAAd,CAAlB,CAIA,QAASC,CAAAA,GAAT,EAAe,CACb,oBAA8BL,KAAK,CAACM,QAAN,CAAmC,EAAnC,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBACA,qBAAwBR,KAAK,CAACM,QAAN,CAAgC,EAAhC,CAAxB,qDAAOG,IAAP,qBAAaC,OAAb,qBAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBR,SAAS,CAACQ,SAAV,CAAoB,CAClBJ,OAAO,CAAEA,OAAO,EAAI,EADF,CAApB,EAGD,CAJD,CAMAP,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB;AACJ;AACA;AACA,OACIC,MAAM,CAACC,IAAP,EACED,MAAM,CAACC,IAAP,CAAYC,KAAZ,CACE,CACEC,MAAM,CAAE,IADV,CAEEC,aAAa,CAAE,IAFjB,CADF,CAKE,SAACH,IAAD,CAAU,CACR;AACV;AACA;AACA;AACA;AACA;AACA,aACUD,MAAM,CAACC,IAAP,CAAYI,WAAZ,CACEJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,EAAR,EAAc,CADhB,CAEE,CAAEC,IAAI,CAAE,SAAR,CAFF,CAGE,SAACC,QAAD,CAAkC,CAChCb,UAAU,CAACa,QAAQ,CAACd,OAAV,CAAV,CACD,CALH,EAOD,CApBH,CADF,CAuBD,CA5BD,CA4BG,EA5BH,EA8BA,GAAMe,CAAAA,KAAK,CAAG,2BAAd,CAEA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,oCACE,4CADF,cAEE,eAAQ,OAAO,CAAEX,SAAjB,wBAFF,GADF,cAME,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,QAAD,EACE,KAAK,CAAEJ,OADT,CAEE,QAAQ,CAAE,kBAACgB,GAAD,CAAMC,CAAN,CAASC,IAAT,CAAkB,CAC1BC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EACAG,OAAO,CAACC,GAAR,CAAYH,CAAZ,EACAE,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAjB,UAAU,CAACe,GAAD,CAAV,CACAb,OAAO,CAACa,GAAG,CAAEK,KAAL,CAAWN,KAAX,CAAD,CAAP,CACD,CARH,EADF,EANF,CAmBGb,IAnBH,SAmBGA,IAnBH,iBAmBGA,IAAI,CAAEoB,GAAN,CAAU,SAACC,GAAD,CAAS,CAClB,mBAAO,oBAAKA,GAAL,EAAP,CACD,CAFA,CAnBH,CAuBGvB,OAvBH,GADF,CA2BD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { DOMMessage, DOMMessageResponse } from \"./types\";\nimport { MemClient } from \"@mem-labs/mem-node\";\nimport MDEditor from \"@uiw/react-md-editor\";\n\nconst memClient = new MemClient({\n  apiAccessToken: \"5436519d-2a67-44ac-a1e0-f2952a2c2953\",\n});\n\nfunction App() {\n  const [content, setContent] = React.useState<string | undefined>(\"\");\n  const [tags, setTags] = React.useState<string[] | null>([]);\n\n  const createMem = () => {\n    memClient.createMem({\n      content: content || \"\",\n    });\n  };\n\n  React.useEffect(() => {\n    /**\n     * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n     * For sending messages from React we need to specify which tab to send it to.\n     */\n    chrome.tabs &&\n      chrome.tabs.query(\n        {\n          active: true,\n          currentWindow: true,\n        },\n        (tabs) => {\n          /**\n           * Sends a single message to the content script(s) in the specified tab,\n           * with an optional callback to run when a response is sent back.\n           *\n           * The runtime.onMessage event is fired in each content script running\n           * in the specified tab for the current extension.\n           */\n          chrome.tabs.sendMessage(\n            tabs[0].id || 0,\n            { type: \"GET_DOM\" } as DOMMessage,\n            (response: DOMMessageResponse) => {\n              setContent(response.content);\n            }\n          );\n        }\n      );\n  }, []);\n\n  const regex = \"B(?<!#)(#[a-zA-Z0-9_]+\\b)\";\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Mem Chrome Extension</h1>\n        <button onClick={createMem}>Add to Mem</button>\n      </div>\n\n      <div className=\"container\">\n        <MDEditor\n          value={content}\n          onChange={(val, e, test) => {\n            console.log(val);\n            console.log(e);\n            console.log(test);\n            setContent(val);\n            setTags(val!.match(regex));\n          }}\n        />\n      </div>\n\n      {tags?.map((tag) => {\n        return <h1>{tag}</h1>;\n      })}\n\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}