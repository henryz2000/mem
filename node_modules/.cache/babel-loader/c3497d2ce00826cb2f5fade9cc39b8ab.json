{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nprocessing.displayName = 'processing';\nprocessing.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function processing(Prism) {\n  Prism.register(refractorClike);\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  });\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  });\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/processing.js"],"names":["refractorClike","processing","displayName","aliases","Prism","register","languages","extend","keyword","function","operator","insertBefore","constant","type","pattern","alias"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,UAAU,CAACC,WAAX,GAAyB,YAAzB;AACAD,UAAU,CAACE,OAAX,GAAqB,EAArB;AAEA;;AACA,eAAe,SAASF,UAAT,CAAoBG,KAApB,EAA2B;AACxCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,cAAf;AACAI,EAAAA,KAAK,CAACE,SAAN,CAAgBL,UAAhB,GAA6BG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AAC3DC,IAAAA,OAAO,EACL,oKAFyD;AAG3D;AACAC,IAAAA,QAAQ,EAAE,gBAJiD;AAK3DC,IAAAA,QAAQ,EAAE;AALiD,GAAhC,CAA7B;AAOAN,EAAAA,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,YAA7B,EAA2C,QAA3C,EAAqD;AACnD;AACAC,IAAAA,QAAQ,EAAE,6BAFyC;AAGnDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,2DADL;AAEJC,MAAAA,KAAK,EAAE;AAFH;AAH6C,GAArD;AAQD","sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nprocessing.displayName = 'processing'\nprocessing.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function processing(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}