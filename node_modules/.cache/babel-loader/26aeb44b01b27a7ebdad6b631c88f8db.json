{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\ngroovy.displayName = 'groovy';\ngroovy.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function groovy(Prism) {\n  Prism.register(refractorClike);\n\n  (function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n\n        }\n      }\n    };\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    });\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    });\n    interpolation.inside.expression.inside = Prism.languages.groovy;\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/groovy.js"],"names":["refractorClike","groovy","displayName","aliases","Prism","register","interpolation","pattern","lookbehind","inside","alias","expression","languages","extend","string","greedy","keyword","number","operator","punctuation","insertBefore","shebang","annotation"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACpCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,cAAf;;AACC,GAAC,UAAUI,KAAV,EAAiB;AACjB,QAAIE,aAAa,GAAG;AAClBC,MAAAA,OAAO,EAAE,8CADS;AAElBC,MAAAA,UAAU,EAAE,IAFM;AAGlBC,MAAAA,MAAM,EAAE;AACN,qCAA6B;AAC3BF,UAAAA,OAAO,EAAE,YADkB;AAE3BG,UAAAA,KAAK,EAAE;AAFoB,SADvB;AAKNC,QAAAA,UAAU,EAAE;AACVJ,UAAAA,OAAO,EAAE,SADC;AAEVE,UAAAA,MAAM,EAAE,IAFE,CAEG;;AAFH;AALN;AAHU,KAApB;AAeAL,IAAAA,KAAK,CAACQ,SAAN,CAAgBX,MAAhB,GAAyBG,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACvDC,MAAAA,MAAM,EAAE;AACN;AACAP,QAAAA,OAAO,EAAE,kDAFH;AAGNQ,QAAAA,MAAM,EAAE;AAHF,OAD+C;AAMvDC,MAAAA,OAAO,EACL,4WAPqD;AAQvDC,MAAAA,MAAM,EACJ,4FATqD;AAUvDC,MAAAA,QAAQ,EAAE;AACRX,QAAAA,OAAO,EACL,mJAFM;AAGRC,QAAAA,UAAU,EAAE;AAHJ,OAV6C;AAevDW,MAAAA,WAAW,EAAE;AAf0C,KAAhC,CAAzB;AAiBAf,IAAAA,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;AAC/CC,MAAAA,OAAO,EAAE;AACPd,QAAAA,OAAO,EAAE,MADF;AAEPG,QAAAA,KAAK,EAAE,SAFA;AAGPK,QAAAA,MAAM,EAAE;AAHD,OADsC;AAM/C,8BAAwB;AACtB;AACA;AACAR,QAAAA,OAAO,EACL,6GAJoB;AAKtBQ,QAAAA,MAAM,EAAE,IALc;AAMtBN,QAAAA,MAAM,EAAE;AACNH,UAAAA,aAAa,EAAEA,aADT;AAENQ,UAAAA,MAAM,EAAE;AAFF;AANc;AANuB,KAAjD;AAkBAV,IAAAA,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD;AACpD,qBAAe;AADqC,KAAtD;AAGAhB,IAAAA,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,UAAvC,EAAmD;AACjDE,MAAAA,UAAU,EAAE;AACVf,QAAAA,OAAO,EAAE,cADC;AAEVC,QAAAA,UAAU,EAAE,IAFF;AAGVE,QAAAA,KAAK,EAAE;AAHG;AADqC,KAAnD;AAOAJ,IAAAA,aAAa,CAACG,MAAd,CAAqBE,UAArB,CAAgCF,MAAhC,GAAyCL,KAAK,CAACQ,SAAN,CAAgBX,MAAzD;AACD,GA9DA,EA8DEG,KA9DF;AA+DF","sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    }\n\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.groovy\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}