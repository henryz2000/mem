{"ast":null,"code":"var messagesListener=function messagesListener(msg,sender,sendResponse){var title=document.title;var url=document.URL;var headlines=Array.from(document.getElementsByTagName(\"h1\")).map(function(h1){return h1.innerText;});var content=\"# \".concat(title,\"\\n\").concat(url,\"\\n\\n\").concat(headlines.map(function(headline){return\"## \".concat(headline);}));var response={title:title,url:url,headlines:headlines,content:content};sendResponse(response);};// listens for messages to be fired\nchrome.runtime.onMessage.addListener(messagesListener);export{};","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/src/chromeServices/DOMEvaluator.ts"],"names":["messagesListener","msg","sender","sendResponse","title","document","url","URL","headlines","Array","from","getElementsByTagName","map","h1","innerText","content","headline","response","chrome","runtime","onMessage","addListener"],"mappings":"AAEA,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CACvBC,GADuB,CAEvBC,MAFuB,CAGvBC,YAHuB,CAIpB,CACH,GAAMC,CAAAA,KAAK,CAAGC,QAAQ,CAACD,KAAvB,CACA,GAAME,CAAAA,GAAG,CAAGD,QAAQ,CAACE,GAArB,CACA,GAAMC,CAAAA,SAAS,CAAGC,KAAK,CAACC,IAAN,CAAWL,QAAQ,CAACM,oBAAT,CAAoC,IAApC,CAAX,EAAsDC,GAAtD,CAChB,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,SAAX,EADgB,CAAlB,CAGA,GAAMC,CAAAA,OAAO,aAAQX,KAAR,cACbE,GADa,gBAGbE,SAAS,CAACI,GAAV,CAAc,SAACI,QAAD,CAAc,CAC5B,mBAAaA,QAAb,EACD,CAFC,CAHa,CAAb,CAOA,GAAMC,CAAAA,QAA4B,CAAG,CACnCb,KAAK,CAALA,KADmC,CAEnCE,GAAG,CAAHA,GAFmC,CAGnCE,SAAS,CAATA,SAHmC,CAInCO,OAAO,CAAPA,OAJmC,CAArC,CAOAZ,YAAY,CAACc,QAAD,CAAZ,CACD,CAzBD,CA2BA;AACAC,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqCrB,gBAArC,E","sourcesContent":["import { DOMMessage, DOMMessageResponse } from \"../types\";\n\nconst messagesListener = (\n  msg: DOMMessage,\n  sender: chrome.runtime.MessageSender,\n  sendResponse: (response: DOMMessageResponse) => void\n) => {\n  const title = document.title;\n  const url = document.URL;\n  const headlines = Array.from(document.getElementsByTagName<\"h1\">(\"h1\")).map(\n    (h1) => h1.innerText\n  );\n  const content = `# ${title}\n${url}\n\n${headlines.map((headline) => {\n  return `## ${headline}`;\n})}`;\n\n  const response: DOMMessageResponse = {\n    title,\n    url,\n    headlines,\n    content,\n  };\n\n  sendResponse(response);\n};\n\n// listens for messages to be fired\nchrome.runtime.onMessage.addListener(messagesListener);\n"]},"metadata":{},"sourceType":"module"}