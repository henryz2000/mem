{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/regenerator\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.memClientCreateMem = void 0;\n\nvar types_1 = require(\"../../api/__codegen__/types\");\n\nvar memClientCreateMem = function memClientCreateMem(_ref) {\n  var memClient = _ref.memClient;\n  return (\n    /**\n     * Creates a new mem, then returns the some details about the created mem.\n     */\n    function (_ref2) {\n      var memId = _ref2.memId,\n          content = _ref2.content,\n          isRead = _ref2.isRead,\n          isArchived = _ref2.isArchived,\n          scheduledFor = _ref2.scheduledFor,\n          createdAt = _ref2.createdAt;\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var input, result, memData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                input = {\n                  memId: memId !== null && memId !== void 0 ? memId : null,\n                  content: content,\n                  format: null,\n                  isRead: isRead !== null && isRead !== void 0 ? isRead : null,\n                  isArchived: isArchived !== null && isArchived !== void 0 ? isArchived : null,\n                  scheduledFor: scheduledFor !== null && scheduledFor !== void 0 ? scheduledFor : null,\n                  createdAt: createdAt !== null && createdAt !== void 0 ? createdAt : null,\n                  richTextDocument: null,\n                  source: null,\n                  clientId: null\n                };\n                _context.next = 3;\n                return memClient.graphqlRequest(types_1.CreateMemDocument, {\n                  input: input\n                });\n\n              case 3:\n                result = _context.sent;\n                memData = result.createMem.mem;\n                return _context.abrupt(\"return\", memData);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  );\n};\n\nexports.memClientCreateMem = memClientCreateMem;","map":{"version":3,"sources":["../../../src/mem-client/methods/createMem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAeO,IAAM,kBAAkB,GAC7B,SADW,kBACX;AAAA,MAAG,SAAH,QAAG,SAAH;AAAA;AACA;;AAEG;AACH;AAAA,UACE,KADF,SACE,KADF;AAAA,UAEE,OAFF,SAEE,OAFF;AAAA,UAGE,MAHF,SAGE,MAHF;AAAA,UAIE,UAJF,SAIE,UAJF;AAAA,UAKE,YALF,SAKE,YALF;AAAA,UAME,SANF,SAME,SANF;AAAA,aAO6B,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB,gBAAA,KADqB,GACb;AACZ,kBAAA,KAAK,EAAE,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,IADJ;AAEZ,kBAAA,OAAO,EAAP,OAFY;AAGZ,kBAAA,MAAM,EAAE,IAHI;AAIZ,kBAAA,MAAM,EAAE,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,IAJN;AAKZ,kBAAA,UAAU,EAAE,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAA,UAAA,GAAc,IALd;AAMZ,kBAAA,YAAY,EAAE,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAA,YAAA,GAAgB,IANlB;AAOZ,kBAAA,SAAS,EAAE,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAA,SAAA,GAAa,IAPZ;AAQZ,kBAAA,gBAAgB,EAAE,IARN;AASZ,kBAAA,MAAM,EAAE,IATI;AAUZ,kBAAA,QAAQ,EAAE;AAVE,iBADa;AAAA;AAcZ,uBAAM,SAAS,CAAC,cAAV,CAAyB,OAAA,CAAA,iBAAzB,EAA4C;AAC/D,kBAAA,KAAK,EAAL;AAD+D,iBAA5C,CAAN;;AAdY;AAcrB,gBAAA,MAdqB;AAkBrB,gBAAA,OAlBqB,GAkBX,MAAM,CAAC,SAAP,CAAiB,GAlBN;AAAA,iDAoBpB,OApBoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA,EAP7B;AAAA;AAJA;AAAA,CADK;;AAAM,OAAA,CAAA,kBAAA,GAAkB,kBAAlB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memClientCreateMem = void 0;\nconst types_1 = require(\"../../api/__codegen__/types\");\nconst memClientCreateMem = ({ memClient }) => \n/**\n * Creates a new mem, then returns the some details about the created mem.\n */\n({ memId, content, isRead, isArchived, scheduledFor, createdAt, }) => __awaiter(void 0, void 0, void 0, function* () {\n    const input = {\n        memId: memId !== null && memId !== void 0 ? memId : null,\n        content,\n        format: null,\n        isRead: isRead !== null && isRead !== void 0 ? isRead : null,\n        isArchived: isArchived !== null && isArchived !== void 0 ? isArchived : null,\n        scheduledFor: scheduledFor !== null && scheduledFor !== void 0 ? scheduledFor : null,\n        createdAt: createdAt !== null && createdAt !== void 0 ? createdAt : null,\n        richTextDocument: null,\n        source: null,\n        clientId: null,\n    };\n    const result = yield memClient.graphqlRequest(types_1.CreateMemDocument, {\n        input,\n    });\n    const memData = result.createMem.mem;\n    return memData;\n});\nexports.memClientCreateMem = memClientCreateMem;\n//# sourceMappingURL=createMem.js.map"]},"metadata":{},"sourceType":"script"}