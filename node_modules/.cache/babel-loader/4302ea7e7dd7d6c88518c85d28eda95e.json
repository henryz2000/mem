{"ast":null,"code":"import React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var italic = {\n  name: 'italic',\n  keyCommand: 'italic',\n  shortcuts: 'ctrlcmd+i',\n  value: '*{{text}}*',\n  buttonProps: {\n    'aria-label': 'Add italic text (ctrl + i)',\n    title: 'Add italic text (ctrl + i)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 320 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n    })\n  }),\n  execute: function execute(state, api) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange); // Replaces the current selection with the bold mark up\n\n    var val = state.command.value || '';\n    api.replaceSelection(val.replace(/({{text}})/gi, state1.selectedText));\n    var start = state1.selection.start + val.indexOf('{{text}}');\n    var end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start); // Adjust the selection to not contain the **\n\n    api.setSelectionRange({\n      start: start,\n      end: end\n    });\n  }\n};","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@uiw/react-md-editor/esm/commands/italic.js"],"names":["React","selectWord","jsx","_jsx","italic","name","keyCommand","shortcuts","value","buttonProps","title","icon","width","height","role","viewBox","children","fill","d","execute","state","api","newSelectionRange","text","selection","state1","setSelectionRange","val","command","replaceSelection","replace","selectedText","start","indexOf","end"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,IAAIC,MAAM,GAAG;AAClBC,EAAAA,IAAI,EAAE,QADY;AAElBC,EAAAA,UAAU,EAAE,QAFM;AAGlBC,EAAAA,SAAS,EAAE,WAHO;AAIlBC,EAAAA,KAAK,EAAE,YAJW;AAKlBC,EAAAA,WAAW,EAAE;AACX,kBAAc,4BADH;AAEXC,IAAAA,KAAK,EAAE;AAFI,GALK;AASlBC,EAAAA,IAAI,EAAE,aAAaR,IAAI,CAAC,KAAD,EAAQ;AAC7B,iBAAa,QADgB;AAE7BS,IAAAA,KAAK,EAAE,IAFsB;AAG7BC,IAAAA,MAAM,EAAE,IAHqB;AAI7BC,IAAAA,IAAI,EAAE,KAJuB;AAK7BC,IAAAA,OAAO,EAAE,aALoB;AAM7BC,IAAAA,QAAQ,EAAE,aAAab,IAAI,CAAC,MAAD,EAAS;AAClCc,MAAAA,IAAI,EAAE,cAD4B;AAElCC,MAAAA,CAAC,EAAE;AAF+B,KAAT;AANE,GAAR,CATL;AAoBlBC,EAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQC,GAAR,EAAgB;AACvB;AACA,QAAIC,iBAAiB,GAAGrB,UAAU,CAAC;AACjCsB,MAAAA,IAAI,EAAEH,KAAK,CAACG,IADqB;AAEjCC,MAAAA,SAAS,EAAEJ,KAAK,CAACI;AAFgB,KAAD,CAAlC;AAIA,QAAIC,MAAM,GAAGJ,GAAG,CAACK,iBAAJ,CAAsBJ,iBAAtB,CAAb,CANuB,CAOvB;;AACA,QAAIK,GAAG,GAAGP,KAAK,CAACQ,OAAN,CAAcpB,KAAd,IAAuB,EAAjC;AACAa,IAAAA,GAAG,CAACQ,gBAAJ,CAAqBF,GAAG,CAACG,OAAJ,CAAY,cAAZ,EAA4BL,MAAM,CAACM,YAAnC,CAArB;AACA,QAAIC,KAAK,GAAGP,MAAM,CAACD,SAAP,CAAiBQ,KAAjB,GAAyBL,GAAG,CAACM,OAAJ,CAAY,UAAZ,CAArC;AACA,QAAIC,GAAG,GAAGT,MAAM,CAACD,SAAP,CAAiBQ,KAAjB,GAAyBL,GAAG,CAACM,OAAJ,CAAY,UAAZ,CAAzB,IAAoDR,MAAM,CAACD,SAAP,CAAiBU,GAAjB,GAAuBT,MAAM,CAACD,SAAP,CAAiBQ,KAA5F,CAAV,CAXuB,CAYvB;;AACAX,IAAAA,GAAG,CAACK,iBAAJ,CAAsB;AACpBM,MAAAA,KAAK,EAALA,KADoB;AAEpBE,MAAAA,GAAG,EAAHA;AAFoB,KAAtB;AAID;AArCiB,CAAb","sourcesContent":["import React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var italic = {\n  name: 'italic',\n  keyCommand: 'italic',\n  shortcuts: 'ctrlcmd+i',\n  value: '*{{text}}*',\n  buttonProps: {\n    'aria-label': 'Add italic text (ctrl + i)',\n    title: 'Add italic text (ctrl + i)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 320 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n    })\n  }),\n  execute: (state, api) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the bold mark up\n    var val = state.command.value || '';\n    api.replaceSelection(val.replace(/({{text}})/gi, state1.selectedText));\n    var start = state1.selection.start + val.indexOf('{{text}}');\n    var end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start);\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n      start,\n      end\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}