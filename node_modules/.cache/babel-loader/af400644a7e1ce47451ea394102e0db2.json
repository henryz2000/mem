{"ast":null,"code":"/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\nimport { stringifyEntities } from 'stringify-entities';\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments ? '<?' + stringifyEntities(node.value, Object.assign({}, state.settings.characterReferences, {\n    subset: ['>']\n  })) + '>' : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->';\n  /**\n   * @param {string} $0\n   */\n\n  function encode($0) {\n    return stringifyEntities($0, Object.assign({}, state.settings.characterReferences, {\n      subset: ['<', '>']\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/hast-util-to-html/lib/handle/comment.js"],"names":["stringifyEntities","comment","node","_1","_2","state","settings","bogusComments","value","Object","assign","characterReferences","subset","replace","encode","$0"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SAAQA,iBAAR,QAAgC,oBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,KAA/B,EAAsC;AAC3C;AACA,SAAOA,KAAK,CAACC,QAAN,CAAeC,aAAf,GACH,OACEP,iBAAiB,CACfE,IAAI,CAACM,KADU,EAEfC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAK,CAACC,QAAN,CAAeK,mBAAjC,EAAsD;AAACC,IAAAA,MAAM,EAAE,CAAC,GAAD;AAAT,GAAtD,CAFe,CADnB,GAKE,GANC,GAOH,SAASV,IAAI,CAACM,KAAL,CAAWK,OAAX,CAAmB,4BAAnB,EAAiDC,MAAjD,CAAT,GAAoE,KAPxE;AASA;AACF;AACA;;AACE,WAASA,MAAT,CAAgBC,EAAhB,EAAoB;AAClB,WAAOf,iBAAiB,CACtBe,EADsB,EAEtBN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAK,CAACC,QAAN,CAAeK,mBAAjC,EAAsD;AACpDC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN;AAD4C,KAAtD,CAFsB,CAAxB;AAMD;AACF","sourcesContent":["/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}