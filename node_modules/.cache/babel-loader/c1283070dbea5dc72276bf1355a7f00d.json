{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\ngradle.displayName = 'gradle';\ngradle.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function gradle(Prism) {\n  Prism.register(refractorClike);\n\n  (function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null\n        }\n      }\n    };\n    Prism.languages.gradle = Prism.languages.extend('clike', {\n      string: {\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n    Prism.languages.insertBefore('gradle', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n    Prism.languages.insertBefore('gradle', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    });\n    Prism.languages.insertBefore('gradle', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    });\n    interpolation.inside.expression.inside = Prism.languages.gradle;\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/gradle.js"],"names":["refractorClike","gradle","displayName","aliases","Prism","register","interpolation","pattern","lookbehind","inside","alias","expression","languages","extend","string","greedy","keyword","number","operator","punctuation","insertBefore","shebang","annotation"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;AAEA;;AACA,eAAe,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACpCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,cAAf;;AACC,GAAC,UAAUI,KAAV,EAAiB;AACjB,QAAIE,aAAa,GAAG;AAClBC,MAAAA,OAAO,EAAE,8CADS;AAElBC,MAAAA,UAAU,EAAE,IAFM;AAGlBC,MAAAA,MAAM,EAAE;AACN,qCAA6B;AAC3BF,UAAAA,OAAO,EAAE,YADkB;AAE3BG,UAAAA,KAAK,EAAE;AAFoB,SADvB;AAKNC,QAAAA,UAAU,EAAE;AACVJ,UAAAA,OAAO,EAAE,SADC;AAEVE,UAAAA,MAAM,EAAE;AAFE;AALN;AAHU,KAApB;AAcAL,IAAAA,KAAK,CAACQ,SAAN,CAAgBX,MAAhB,GAAyBG,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACvDC,MAAAA,MAAM,EAAE;AACNP,QAAAA,OAAO,EAAE,kDADH;AAENQ,QAAAA,MAAM,EAAE;AAFF,OAD+C;AAKvDC,MAAAA,OAAO,EACL,kIANqD;AAOvDC,MAAAA,MAAM,EACJ,4FARqD;AASvDC,MAAAA,QAAQ,EAAE;AACRX,QAAAA,OAAO,EACL,mJAFM;AAGRC,QAAAA,UAAU,EAAE;AAHJ,OAT6C;AAcvDW,MAAAA,WAAW,EAAE;AAd0C,KAAhC,CAAzB;AAgBAf,IAAAA,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;AAC/CC,MAAAA,OAAO,EAAE;AACPd,QAAAA,OAAO,EAAE,MADF;AAEPG,QAAAA,KAAK,EAAE,SAFA;AAGPK,QAAAA,MAAM,EAAE;AAHD,OADsC;AAM/C,8BAAwB;AACtBR,QAAAA,OAAO,EACL,6GAFoB;AAGtBQ,QAAAA,MAAM,EAAE,IAHc;AAItBN,QAAAA,MAAM,EAAE;AACNH,UAAAA,aAAa,EAAEA,aADT;AAENQ,UAAAA,MAAM,EAAE;AAFF;AAJc;AANuB,KAAjD;AAgBAV,IAAAA,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD;AACpD,qBAAe;AADqC,KAAtD;AAGAhB,IAAAA,KAAK,CAACQ,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,EAAuC,UAAvC,EAAmD;AACjDE,MAAAA,UAAU,EAAE;AACVf,QAAAA,OAAO,EAAE,cADC;AAEVC,QAAAA,UAAU,EAAE,IAFF;AAGVE,QAAAA,KAAK,EAAE;AAHG;AADqC,KAAnD;AAOAJ,IAAAA,aAAa,CAACG,MAAd,CAAqBE,UAArB,CAAgCF,MAAhC,GAAyCL,KAAK,CAACQ,SAAN,CAAgBX,MAAzD;AACD,GA1DA,EA0DEG,KA1DF;AA2DF","sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\ngradle.displayName = 'gradle'\ngradle.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function gradle(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null\n        }\n      }\n    }\n    Prism.languages.gradle = Prism.languages.extend('clike', {\n      string: {\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('gradle', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('gradle', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('gradle', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.gradle\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}