{"ast":null,"code":"import _toConsumableArray from \"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"onChange\"],\n    _excluded2 = [\"markdown\", \"commands\", \"fullscreen\", \"preview\", \"highlightEnable\", \"extraCommands\", \"tabSize\", \"defaultTabEnable\", \"dispatch\"];\nimport React, { useContext, useEffect } from 'react';\nimport { EditorContext } from '../../Context';\nimport { TextAreaCommandOrchestrator } from '../../commands';\nimport handleKeyDown from './handleKeyDown';\nimport shortcuts from './shortcuts';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Textarea(props) {\n  var prefixCls = props.prefixCls,\n      _onChange = props.onChange,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useContext = useContext(EditorContext),\n      markdown = _useContext.markdown,\n      commands = _useContext.commands,\n      fullscreen = _useContext.fullscreen,\n      preview = _useContext.preview,\n      highlightEnable = _useContext.highlightEnable,\n      extraCommands = _useContext.extraCommands,\n      tabSize = _useContext.tabSize,\n      defaultTabEnable = _useContext.defaultTabEnable,\n      dispatch = _useContext.dispatch,\n      otherStore = _objectWithoutPropertiesLoose(_useContext, _excluded2);\n\n  var textRef = React.useRef(null);\n  var executeRef = React.useRef();\n  var statesRef = React.useRef({\n    fullscreen: fullscreen,\n    preview: preview\n  });\n  useEffect(function () {\n    statesRef.current = {\n      fullscreen: fullscreen,\n      preview: preview,\n      highlightEnable: highlightEnable\n    };\n  }, [fullscreen, preview, highlightEnable]);\n  useEffect(function () {\n    if (textRef.current && dispatch) {\n      var commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n      executeRef.current = commandOrchestrator;\n      dispatch({\n        textarea: textRef.current,\n        commandOrchestrator: commandOrchestrator\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  var onKeyDown = function onKeyDown(e) {\n    handleKeyDown(e, tabSize, defaultTabEnable);\n    shortcuts(e, [].concat(_toConsumableArray(commands || []), _toConsumableArray(extraCommands || [])), executeRef.current, dispatch, statesRef.current);\n  };\n\n  useEffect(function () {\n    if (textRef.current) {\n      textRef.current.addEventListener('keydown', onKeyDown);\n    }\n\n    return function () {\n      if (textRef.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        textRef.current.removeEventListener('keydown', onKeyDown);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsx(\"textarea\", _extends({\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: false\n  }, other, {\n    ref: textRef,\n    className: prefixCls + \"-text-input \" + (other.className ? other.className : ''),\n    value: markdown,\n    onChange: function onChange(e) {\n      dispatch && dispatch({\n        markdown: e.target.value\n      });\n      _onChange && _onChange(e);\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@uiw/react-md-editor/esm/components/TextArea/Textarea.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","useContext","useEffect","EditorContext","TextAreaCommandOrchestrator","handleKeyDown","shortcuts","jsx","_jsx","Textarea","props","prefixCls","_onChange","onChange","other","_useContext","markdown","commands","fullscreen","preview","highlightEnable","extraCommands","tabSize","defaultTabEnable","dispatch","otherStore","textRef","useRef","executeRef","statesRef","current","commandOrchestrator","textarea","onKeyDown","e","addEventListener","removeEventListener","autoComplete","autoCorrect","autoCapitalize","spellCheck","ref","className","value","target"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"onChange\"],\n  _excluded2 = [\"markdown\", \"commands\", \"fullscreen\", \"preview\", \"highlightEnable\", \"extraCommands\", \"tabSize\", \"defaultTabEnable\", \"dispatch\"];\nimport React, { useContext, useEffect } from 'react';\nimport { EditorContext } from '../../Context';\nimport { TextAreaCommandOrchestrator } from '../../commands';\nimport handleKeyDown from './handleKeyDown';\nimport shortcuts from './shortcuts';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Textarea(props) {\n  var {\n      prefixCls,\n      onChange: _onChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useContext = useContext(EditorContext),\n    {\n      markdown,\n      commands,\n      fullscreen,\n      preview,\n      highlightEnable,\n      extraCommands,\n      tabSize,\n      defaultTabEnable,\n      dispatch\n    } = _useContext,\n    otherStore = _objectWithoutPropertiesLoose(_useContext, _excluded2);\n  var textRef = React.useRef(null);\n  var executeRef = React.useRef();\n  var statesRef = React.useRef({\n    fullscreen,\n    preview\n  });\n  useEffect(() => {\n    statesRef.current = {\n      fullscreen,\n      preview,\n      highlightEnable\n    };\n  }, [fullscreen, preview, highlightEnable]);\n  useEffect(() => {\n    if (textRef.current && dispatch) {\n      var commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n      executeRef.current = commandOrchestrator;\n      dispatch({\n        textarea: textRef.current,\n        commandOrchestrator\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var onKeyDown = e => {\n    handleKeyDown(e, tabSize, defaultTabEnable);\n    shortcuts(e, [...(commands || []), ...(extraCommands || [])], executeRef.current, dispatch, statesRef.current);\n  };\n  useEffect(() => {\n    if (textRef.current) {\n      textRef.current.addEventListener('keydown', onKeyDown);\n    }\n    return () => {\n      if (textRef.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        textRef.current.removeEventListener('keydown', onKeyDown);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsx(\"textarea\", _extends({\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: false\n  }, other, {\n    ref: textRef,\n    className: prefixCls + \"-text-input \" + (other.className ? other.className : ''),\n    value: markdown,\n    onChange: e => {\n      dispatch && dispatch({\n        markdown: e.target.value\n      });\n      _onChange && _onChange(e);\n    }\n  }));\n}"]},"metadata":{},"sourceType":"module"}