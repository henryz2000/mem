{"ast":null,"code":"// @ts-nocheck\nimport refractorMarkup from './markup.js';\nxeora.displayName = 'xeora';\nxeora.aliases = ['xeoracube'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function xeora(Prism) {\n  Prism.register(refractorMarkup);\n\n  (function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      variable: Prism.languages.xeora['function-inline'].inside['variable']\n    }, Prism.languages.xeora['function-block']);\n    Prism.languages.xeoracube = Prism.languages.xeora;\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/xeora.js"],"names":["refractorMarkup","xeora","displayName","aliases","Prism","register","languages","extend","constant","pattern","inside","punctuation","variable","operator","alias","tag","attribute","insertBefore","xeoracube"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,aAA5B;AACAC,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,CAAC,WAAD,CAAhB;AAEA;;AACA,eAAe,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACnCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,eAAf;;AACC,GAAC,UAAUI,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB,EAAiC;AACvDC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE,2CADD;AAERC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE;AADE;AADP;AAFA,OAD6C;AASvDG,MAAAA,QAAQ,EAAE;AACRH,QAAAA,OAAO,EAAE,8BADD;AAERC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE;AADE,WADP;AAINI,UAAAA,QAAQ,EAAE;AACRJ,YAAAA,OAAO,EAAE;AADD;AAJJ;AAFA,OAT6C;AAoBvD,yBAAmB;AACjBA,QAAAA,OAAO,EACL,uMAFe;AAGjBC,QAAAA,MAAM,EAAE;AACNE,UAAAA,QAAQ,EAAE;AACRH,YAAAA,OAAO,EAAE,kCADD;AAERC,YAAAA,MAAM,EAAE;AACNC,cAAAA,WAAW,EAAE;AACXF,gBAAAA,OAAO,EAAE;AADE,eADP;AAINI,cAAAA,QAAQ,EAAE;AACRJ,gBAAAA,OAAO,EAAE;AADD;AAJJ;AAFA,WADJ;AAYNE,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE;AADE;AAZP,SAHS;AAmBjBK,QAAAA,KAAK,EAAE;AAnBU,OApBoC;AAyCvD,wBAAkB;AAChBL,QAAAA,OAAO,EACL,+MAFc;AAGhBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE;AADE;AADP,SAHQ;AAQhBK,QAAAA,KAAK,EAAE;AARS,OAzCqC;AAmDvD,0BAAoB;AAClBL,QAAAA,OAAO,EAAE,8CADS;AAElBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE,gCADE;AAEXC,YAAAA,MAAM,EAAE;AACNK,cAAAA,GAAG,EAAE;AACHN,gBAAAA,OAAO,EAAE;AADN;AADC;AAFG;AADP,SAFU;AAYlBK,QAAAA,KAAK,EAAE;AAZW,OAnDmC;AAiEvD,8BAAwB;AACtBL,QAAAA,OAAO,EACL,kEAFoB;AAGtBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE,gCADE;AAEXC,YAAAA,MAAM,EAAE;AACNK,cAAAA,GAAG,EAAE;AACHN,gBAAAA,OAAO,EAAE;AADN;AADC;AAFG,WADP;AASNO,UAAAA,SAAS,EAAE;AACTP,YAAAA,OAAO,EAAE,UADA;AAETC,YAAAA,MAAM,EAAE;AACNC,cAAAA,WAAW,EAAE;AACXF,gBAAAA,OAAO,EAAE;AADE;AADP,aAFC;AAOTK,YAAAA,KAAK,EAAE;AAPE;AATL,SAHc;AAsBtBA,QAAAA,KAAK,EAAE;AAtBe,OAjE+B;AAyFvD,mCAA6B;AAC3BL,QAAAA,OAAO,EAAE,eADkB;AAE3BC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE;AADE;AADP,SAFmB;AAO3BK,QAAAA,KAAK,EAAE;AAPoB,OAzF0B;AAkGvD,+BAAyB;AACvBL,QAAAA,OAAO,EAAE,cADc;AAEvBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AACXF,YAAAA,OAAO,EAAE;AADE;AADP,SAFe;AAOvBK,QAAAA,KAAK,EAAE;AAPgB;AAlG8B,KAAjC,CAAxB;AA4GAV,IAAAA,KAAK,CAACE,SAAN,CAAgBW,YAAhB,CACE,QADF,EAEE,aAFF,EAGE;AACEL,MAAAA,QAAQ,EAAER,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,iBAAtB,EAAyCS,MAAzC,CAAgD,UAAhD;AADZ,KAHF,EAMEN,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,gBAAtB,CANF;AAQAG,IAAAA,KAAK,CAACE,SAAN,CAAgBY,SAAhB,GAA4Bd,KAAK,CAACE,SAAN,CAAgBL,KAA5C;AACD,GAtHA,EAsHEG,KAtHF;AAuHF","sourcesContent":["// @ts-nocheck\nimport refractorMarkup from './markup.js'\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\n\n/** @type {import('../core.js').Syntax} */\nexport default function xeora(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}