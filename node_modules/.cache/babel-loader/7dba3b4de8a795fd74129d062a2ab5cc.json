{"ast":null,"code":"import _slicedToArray from\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import\"./App.css\";import{MemClient}from\"@mem-labs/mem-node\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var memClient=new MemClient({apiAccessToken:\"5436519d-2a67-44ac-a1e0-f2952a2c2953\"});var createMem=function createMem(){memClient.createMem({content:\"Hello there! I am a new mem.\"});};function App(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),title=_React$useState2[0],setTitle=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),headlines=_React$useState4[0],setHeadlines=_React$useState4[1];React.useEffect(function(){/**\n     * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n     * For sending messages from React we need to specify which tab to send it to.\n     */chrome.tabs&&chrome.tabs.query({active:true,currentWindow:true},function(tabs){console.log(\"test\");/**\n           * Sends a single message to the content script(s) in the specified tab,\n           * with an optional callback to run when a response is sent back.\n           *\n           * The runtime.onMessage event is fired in each content script running\n           * in the specified tab for the current extension.\n           */chrome.tabs.sendMessage(tabs[0].id||0,{type:\"GET_DOM\"},function(response){console.log(\"test2\");setTitle(response.title);setHeadlines(response.headlines);});});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"SEO Extension built with React!\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"SEOForm\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"SEOValidation\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"SEOValidationField\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"SEOValidationFieldTitle\",children:\"Title\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"SEOValidationFieldStatus \".concat(title.length<30||title.length>65?\"Error\":\"Ok\"),children:[title.length,\" Characters\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"SEOVAlidationFieldValue\",children:title})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"SEOValidation\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"SEOValidationField\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"SEOValidationFieldTitle\",children:\"Main Heading\"}),/*#__PURE__*/_jsx(\"span\",{className:\"SEOValidationFieldStatus \".concat(headlines.length!==1?\"Error\":\"Ok\"),children:headlines.length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"SEOVAlidationFieldValue\",children:/*#__PURE__*/_jsx(\"ul\",{children:headlines.map(function(headline,index){return/*#__PURE__*/_jsx(\"li\",{children:headline},index);})})})]})]})]});}export default App;","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/src/App.tsx"],"names":["React","MemClient","memClient","apiAccessToken","createMem","content","App","useState","title","setTitle","headlines","setHeadlines","useEffect","chrome","tabs","query","active","currentWindow","console","log","sendMessage","id","type","response","length","map","headline","index"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CAEA,OAASC,SAAT,KAA0B,oBAA1B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,GAAID,CAAAA,SAAJ,CAAc,CAC9BE,cAAc,CAAE,sCADc,CAAd,CAAlB,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBF,SAAS,CAACE,SAAV,CAAoB,CAClBC,OAAO,CAAE,8BADS,CAApB,EAGD,CAJD,CAMA,QAASC,CAAAA,GAAT,EAAe,CACb,oBAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBACA,qBAAkCT,KAAK,CAACO,QAAN,CAAyB,EAAzB,CAAlC,qDAAOG,SAAP,qBAAkBC,YAAlB,qBAEAX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB;AACJ;AACA;AACA,OACIC,MAAM,CAACC,IAAP,EACED,MAAM,CAACC,IAAP,CAAYC,KAAZ,CACE,CACEC,MAAM,CAAE,IADV,CAEEC,aAAa,CAAE,IAFjB,CADF,CAKE,SAACH,IAAD,CAAU,CACRI,OAAO,CAACC,GAAR,CAAY,MAAZ,EACA;AACV;AACA;AACA;AACA;AACA;AACA,aACUN,MAAM,CAACC,IAAP,CAAYM,WAAZ,CACEN,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAAR,EAAc,CADhB,CAEE,CAAEC,IAAI,CAAE,SAAR,CAFF,CAGE,SAACC,QAAD,CAAkC,CAChCL,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAV,QAAQ,CAACc,QAAQ,CAACf,KAAV,CAAR,CACAG,YAAY,CAACY,QAAQ,CAACb,SAAV,CAAZ,CACD,CAPH,EASD,CAvBH,CADF,CA0BD,CA/BD,CA+BG,EA/BH,EAiCA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,uDADF,cAGE,YAAI,SAAS,CAAC,SAAd,wBACE,YAAI,SAAS,CAAC,eAAd,wBACE,aAAK,SAAS,CAAC,oBAAf,wBACE,aAAM,SAAS,CAAC,yBAAhB,mBADF,cAEE,cACE,SAAS,oCACPF,KAAK,CAACgB,MAAN,CAAe,EAAf,EAAqBhB,KAAK,CAACgB,MAAN,CAAe,EAApC,CAAyC,OAAzC,CAAmD,IAD5C,CADX,WAKGhB,KAAK,CAACgB,MALT,iBAFF,GADF,cAWE,YAAK,SAAS,CAAC,yBAAf,UAA0ChB,KAA1C,EAXF,GADF,cAeE,YAAI,SAAS,CAAC,eAAd,wBACE,aAAK,SAAS,CAAC,oBAAf,wBACE,aAAM,SAAS,CAAC,yBAAhB,0BADF,cAEE,aACE,SAAS,oCACPE,SAAS,CAACc,MAAV,GAAqB,CAArB,CAAyB,OAAzB,CAAmC,IAD5B,CADX,UAKGd,SAAS,CAACc,MALb,EAFF,GADF,cAWE,YAAK,SAAS,CAAC,yBAAf,uBACE,oBACGd,SAAS,CAACe,GAAV,CAAc,SAACC,QAAD,CAAWC,KAAX,qBACb,oBAAiBD,QAAjB,EAASC,KAAT,CADa,EAAd,CADH,EADF,EAXF,GAfF,GAHF,GADF,CAyCD,CAED,cAAerB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { DOMMessage, DOMMessageResponse } from \"./types\";\nimport { MemClient } from \"@mem-labs/mem-node\";\n\nconst memClient = new MemClient({\n  apiAccessToken: \"5436519d-2a67-44ac-a1e0-f2952a2c2953\",\n});\n\nconst createMem = () => {\n  memClient.createMem({\n    content: \"Hello there! I am a new mem.\",\n  });\n};\n\nfunction App() {\n  const [title, setTitle] = React.useState(\"\");\n  const [headlines, setHeadlines] = React.useState<string[]>([]);\n\n  React.useEffect(() => {\n    /**\n     * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n     * For sending messages from React we need to specify which tab to send it to.\n     */\n    chrome.tabs &&\n      chrome.tabs.query(\n        {\n          active: true,\n          currentWindow: true,\n        },\n        (tabs) => {\n          console.log(\"test\");\n          /**\n           * Sends a single message to the content script(s) in the specified tab,\n           * with an optional callback to run when a response is sent back.\n           *\n           * The runtime.onMessage event is fired in each content script running\n           * in the specified tab for the current extension.\n           */\n          chrome.tabs.sendMessage(\n            tabs[0].id || 0,\n            { type: \"GET_DOM\" } as DOMMessage,\n            (response: DOMMessageResponse) => {\n              console.log(\"test2\");\n              setTitle(response.title);\n              setHeadlines(response.headlines);\n            }\n          );\n        }\n      );\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>SEO Extension built with React!</h1>\n\n      <ul className=\"SEOForm\">\n        <li className=\"SEOValidation\">\n          <div className=\"SEOValidationField\">\n            <span className=\"SEOValidationFieldTitle\">Title</span>\n            <span\n              className={`SEOValidationFieldStatus ${\n                title.length < 30 || title.length > 65 ? \"Error\" : \"Ok\"\n              }`}\n            >\n              {title.length} Characters\n            </span>\n          </div>\n          <div className=\"SEOVAlidationFieldValue\">{title}</div>\n        </li>\n\n        <li className=\"SEOValidation\">\n          <div className=\"SEOValidationField\">\n            <span className=\"SEOValidationFieldTitle\">Main Heading</span>\n            <span\n              className={`SEOValidationFieldStatus ${\n                headlines.length !== 1 ? \"Error\" : \"Ok\"\n              }`}\n            >\n              {headlines.length}\n            </span>\n          </div>\n          <div className=\"SEOVAlidationFieldValue\">\n            <ul>\n              {headlines.map((headline, index) => (\n                <li key={index}>{headline}</li>\n              ))}\n            </ul>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}