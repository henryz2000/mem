{"ast":null,"code":"// @ts-nocheck\nbnf.displayName = 'bnf';\nbnf.aliases = ['rbnf'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  };\n  Prism.languages.rbnf = Prism.languages.bnf;\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/bnf.js"],"names":["bnf","displayName","aliases","Prism","languages","string","pattern","definition","alias","inside","punctuation","rule","operator","rbnf"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,CAAC,MAAD,CAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;AACjCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KADY;AAIpBC,IAAAA,UAAU,EAAE;AACVD,MAAAA,OAAO,EAAE,0BADC;AAEVE,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,SAAT,CAFG;AAGVC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP;AAHE,KAJQ;AAWpBC,IAAAA,IAAI,EAAE;AACJL,MAAAA,OAAO,EAAE,gBADL;AAEJG,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP;AAFJ,KAXc;AAiBpBE,IAAAA,QAAQ,EAAE;AAjBU,GAAtB;AAmBAT,EAAAA,KAAK,CAACC,SAAN,CAAgBS,IAAhB,GAAuBV,KAAK,CAACC,SAAN,CAAgBJ,GAAvC;AACD","sourcesContent":["// @ts-nocheck\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n"]},"metadata":{},"sourceType":"module"}