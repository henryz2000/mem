{"ast":null,"code":"/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\nimport { whitespace } from 'hast-util-whitespace';\nimport { siblingAfter } from './util/siblings.js';\nimport { omission } from './omission.js';\nexport var closing = omission({\n  html: html,\n  head: headOrColgroupOrCaption,\n  body: body,\n  p: p,\n  li: li,\n  dt: dt,\n  dd: dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup: optgroup,\n  option: option,\n  menuitem: menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead: thead,\n  tbody: tbody,\n  tfoot: tfoot,\n  tr: tr,\n  td: cells,\n  th: cells\n});\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\nfunction headOrColgroupOrCaption(_, index, parent) {\n  var next = siblingAfter(parent, index, true);\n  return !next || next.type !== 'comment' && !(next.type === 'text' && whitespace(next.value.charAt(0)));\n}\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction html(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment';\n}\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction body(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment';\n}\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\n\n\nfunction p(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return next ? next.type === 'element' && (next.tagName === 'address' || next.tagName === 'article' || next.tagName === 'aside' || next.tagName === 'blockquote' || next.tagName === 'details' || next.tagName === 'div' || next.tagName === 'dl' || next.tagName === 'fieldset' || next.tagName === 'figcaption' || next.tagName === 'figure' || next.tagName === 'footer' || next.tagName === 'form' || next.tagName === 'h1' || next.tagName === 'h2' || next.tagName === 'h3' || next.tagName === 'h4' || next.tagName === 'h5' || next.tagName === 'h6' || next.tagName === 'header' || next.tagName === 'hgroup' || next.tagName === 'hr' || next.tagName === 'main' || next.tagName === 'menu' || next.tagName === 'nav' || next.tagName === 'ol' || next.tagName === 'p' || next.tagName === 'pre' || next.tagName === 'section' || next.tagName === 'table' || next.tagName === 'ul') : !parent || // Confusing parent.\n  !(parent.type === 'element' && (parent.tagName === 'a' || parent.tagName === 'audio' || parent.tagName === 'del' || parent.tagName === 'ins' || parent.tagName === 'map' || parent.tagName === 'noscript' || parent.tagName === 'video'));\n}\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction li(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && next.tagName === 'li';\n}\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction dt(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return next && next.type === 'element' && (next.tagName === 'dt' || next.tagName === 'dd');\n}\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction dd(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'dt' || next.tagName === 'dd');\n}\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction rubyElement(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'rp' || next.tagName === 'rt');\n}\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction optgroup(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && next.tagName === 'optgroup';\n}\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction option(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'option' || next.tagName === 'optgroup');\n}\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction menuitem(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'menuitem' || next.tagName === 'hr' || next.tagName === 'menu');\n}\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction thead(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return next && next.type === 'element' && (next.tagName === 'tbody' || next.tagName === 'tfoot');\n}\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction tbody(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'tbody' || next.tagName === 'tfoot');\n}\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index);\n}\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction tr(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && next.tagName === 'tr';\n}\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n\n\nfunction cells(_, index, parent) {\n  var next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'td' || next.tagName === 'th');\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/hast-util-to-html/lib/omission/closing.js"],"names":["whitespace","siblingAfter","omission","closing","html","head","headOrColgroupOrCaption","body","p","li","dt","dd","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","cells","th","_","index","parent","next","type","value","charAt","tagName"],"mappings":"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","sourcesContent":["/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}