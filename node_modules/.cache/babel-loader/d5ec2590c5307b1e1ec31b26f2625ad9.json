{"ast":null,"code":"// @ts-nocheck\nimport refractorJavascript from './javascript.js';\nflow.displayName = 'flow';\nflow.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function flow(Prism) {\n  Prism.register(refractorJavascript);\n\n  (function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {});\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [{\n        pattern: /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n        alias: 'class-name'\n      }]\n    });\n    Prism.languages.flow['function-variable'].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i;\n    delete Prism.languages.flow['parameter'];\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    });\n\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n    }\n\n    Prism.languages.flow.keyword.unshift({\n      pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n      lookbehind: true\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/flow.js"],"names":["refractorJavascript","flow","displayName","aliases","Prism","register","languages","extend","insertBefore","type","pattern","alias","Array","isArray","keyword","unshift","lookbehind"],"mappings":"AAAA;AACA,OAAOA,mBAAP,MAAgC,iBAAhC;AACAC,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;AAEA;;AACA,eAAe,SAASF,IAAT,CAAcG,KAAd,EAAqB;AAClCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,mBAAf;;AACC,GAAC,UAAUI,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,GAAuBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,YAAvB,EAAqC,EAArC,CAAvB;AACAH,IAAAA,KAAK,CAACE,SAAN,CAAgBE,YAAhB,CAA6B,MAA7B,EAAqC,SAArC,EAAgD;AAC9CC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,OAAO,EACL,+EAFJ;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADI;AADwC,KAAhD;AASAP,IAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,CAAqB,mBAArB,EAA0CS,OAA1C,GACE,sKADF;AAEA,WAAON,KAAK,CAACE,SAAN,CAAgBL,IAAhB,CAAqB,WAArB,CAAP;AACAG,IAAAA,KAAK,CAACE,SAAN,CAAgBE,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;AAC/C,0BAAoB;AAClBE,QAAAA,OAAO,EAAE,WADS;AAElBC,QAAAA,KAAK,EAAE;AAFW;AAD2B,KAAjD;;AAMA,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcT,KAAK,CAACE,SAAN,CAAgBL,IAAhB,CAAqBa,OAAnC,CAAL,EAAkD;AAChDV,MAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,CAAqBa,OAArB,GAA+B,CAACV,KAAK,CAACE,SAAN,CAAgBL,IAAhB,CAAqBa,OAAtB,CAA/B;AACD;;AACDV,IAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,CAAqBa,OAArB,CAA6BC,OAA7B,CACE;AACEL,MAAAA,OAAO,EAAE,iDADX;AAEEM,MAAAA,UAAU,EAAE;AAFd,KADF,EAKE;AACEN,MAAAA,OAAO,EACL,uGAFJ;AAGEM,MAAAA,UAAU,EAAE;AAHd,KALF;AAWD,GAlCA,EAkCEZ,KAlCF;AAmCF","sourcesContent":["// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nflow.displayName = 'flow'\nflow.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function flow(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}