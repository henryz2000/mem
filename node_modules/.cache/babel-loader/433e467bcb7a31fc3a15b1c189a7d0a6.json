{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._handleGraphqlRequestErrors = void 0;\n\nconst request_1 = require(\"../../../utils/errors/request\");\n\nconst _handleGraphqlRequestErrors = ({\n  err\n}) => {\n  var _a, _b;\n\n  if (\"response\" in err && \"errors\" in err.response) {\n    const graphqlErrors = err.response.errors;\n    const firstError = graphqlErrors[0];\n    /** We don't know how to handle this error, so we re-throw. */\n\n    if (firstError) {\n      const extensionCode = (_b = (_a = firstError.extensions) === null || _a === void 0 ? void 0 : _a.code) !== null && _b !== void 0 ? _b : \"CLIENT::UNKNOWN_ERROR\";\n      throw new request_1.ClientRequestError({\n        message: `Request failed with error code: ${extensionCode}`\n      });\n    }\n  }\n  /** We don't know how to handle this error, so we re-throw. */\n\n\n  throw new request_1.ClientRequestError({\n    message: `Request failed: ${err.message || JSON.stringify(err)}`\n  });\n};\n\nexports._handleGraphqlRequestErrors = _handleGraphqlRequestErrors;","map":{"version":3,"sources":["../../../../src/services/mock-server/graphql/handleErrors.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAA,SAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AASO,MAAM,2BAA2B,GAAG,CAAC;AAAE,EAAA;AAAF,CAAD,KAAiD;;;AAC1F,MAAI,cAAc,GAAd,IAAqB,YAAY,GAAG,CAAC,QAAzC,EAAmD;AACjD,UAAM,aAAa,GAAG,GAAG,CAAC,QAAJ,CAAa,MAAnC;AACA,UAAM,UAAU,GAAG,aAAa,CAAC,CAAD,CAAhC;AAEA;;AACA,QAAI,UAAJ,EAAgB;AACd,YAAM,aAAa,GACjB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAX,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,IAAvB,MAA2B,IAA3B,IAA2B,EAAA,KAAA,KAAA,CAA3B,GAA2B,EAA3B,GAA+B,uBADjC;AAGA,YAAM,IAAI,SAAA,CAAA,kBAAJ,CAAuB;AAC3B,QAAA,OAAO,EAAE,mCAAmC,aAAa;AAD9B,OAAvB,CAAN;AAGD;AACF;AAED;;;AACA,QAAM,IAAI,SAAA,CAAA,kBAAJ,CAAuB;AAC3B,IAAA,OAAO,EAAE,mBAAmB,GAAG,CAAC,OAAJ,IAAe,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB;AADnC,GAAvB,CAAN;AAGD,CApBM;;AAAM,OAAA,CAAA,2BAAA,GAA2B,2BAA3B","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._handleGraphqlRequestErrors = void 0;\nconst request_1 = require(\"../../../utils/errors/request\");\nconst _handleGraphqlRequestErrors = ({ err }) => {\n    var _a, _b;\n    if (\"response\" in err && \"errors\" in err.response) {\n        const graphqlErrors = err.response.errors;\n        const firstError = graphqlErrors[0];\n        /** We don't know how to handle this error, so we re-throw. */\n        if (firstError) {\n            const extensionCode = (_b = (_a = firstError.extensions) === null || _a === void 0 ? void 0 : _a.code) !== null && _b !== void 0 ? _b : \"CLIENT::UNKNOWN_ERROR\";\n            throw new request_1.ClientRequestError({\n                message: `Request failed with error code: ${extensionCode}`,\n            });\n        }\n    }\n    /** We don't know how to handle this error, so we re-throw. */\n    throw new request_1.ClientRequestError({\n        message: `Request failed: ${err.message || JSON.stringify(err)}`,\n    });\n};\nexports._handleGraphqlRequestErrors = _handleGraphqlRequestErrors;\n//# sourceMappingURL=handleErrors.js.map"]},"metadata":{},"sourceType":"script"}