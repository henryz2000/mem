{"ast":null,"code":"// @ts-nocheck\nawk.displayName = 'awk';\nawk.aliases = ['gawk'];\n/** @type {import('../core.js').Syntax} */\n\nexport default function awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword: /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  };\n  Prism.languages.gawk = Prism.languages.awk;\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/awk.js"],"names":["awk","displayName","aliases","Prism","languages","hashbang","pattern","greedy","alias","comment","string","lookbehind","regex","variable","keyword","function","number","operator","punctuation","gawk"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,CAAC,MAAD,CAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;AACjCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,OADD;AAERC,MAAAA,MAAM,EAAE,IAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADU;AAMpBC,IAAAA,OAAO,EAAE;AACPH,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KANW;AAUpBG,IAAAA,MAAM,EAAE;AACNJ,MAAAA,OAAO,EAAE,gCADH;AAENK,MAAAA,UAAU,EAAE,IAFN;AAGNJ,MAAAA,MAAM,EAAE;AAHF,KAVY;AAepBK,IAAAA,KAAK,EAAE;AACLN,MAAAA,OAAO,EAAE,6CADJ;AAELK,MAAAA,UAAU,EAAE,IAFP;AAGLJ,MAAAA,MAAM,EAAE;AAHH,KAfa;AAoBpBM,IAAAA,QAAQ,EAAE,OApBU;AAqBpBC,IAAAA,OAAO,EACL,8KAtBkB;AAuBpBC,IAAAA,QAAQ,EAAE,uBAvBU;AAwBpBC,IAAAA,MAAM,EAAE,oDAxBY;AAyBpBC,IAAAA,QAAQ,EAAE,8DAzBU;AA0BpBC,IAAAA,WAAW,EAAE;AA1BO,GAAtB;AA4BAf,EAAAA,KAAK,CAACC,SAAN,CAAgBe,IAAhB,GAAuBhB,KAAK,CAACC,SAAN,CAAgBJ,GAAvC;AACD","sourcesContent":["// @ts-nocheck\nawk.displayName = 'awk'\nawk.aliases = ['gawk']\n\n/** @type {import('../core.js').Syntax} */\nexport default function awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword:\n      /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  }\n  Prism.languages.gawk = Prism.languages.awk\n}\n"]},"metadata":{},"sourceType":"module"}