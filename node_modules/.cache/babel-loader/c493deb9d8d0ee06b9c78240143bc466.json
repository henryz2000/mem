{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\nvar own = {}.hasOwnProperty;\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\n\nexport function hasProperty(node, field) {\n  var value = typeof field === 'string' && isNode(node) && node.type === 'element' && node.properties && own.call(node.properties, field) && node.properties[field];\n  return value !== null && value !== undefined && value !== false;\n}\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\n\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/hast-util-has-property/lib/index.js"],"names":["own","hasOwnProperty","hasProperty","node","field","value","isNode","type","properties","call","undefined","Boolean"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAMA,GAAG,GAAG,GAAGC,cAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AACvC,MAAMC,KAAK,GACT,OAAOD,KAAP,KAAiB,QAAjB,IACAE,MAAM,CAACH,IAAD,CADN,IAEAA,IAAI,CAACI,IAAL,KAAc,SAFd,IAGAJ,IAAI,CAACK,UAHL,IAIAR,GAAG,CAACS,IAAJ,CAASN,IAAI,CAACK,UAAd,EAA0BJ,KAA1B,CAJA,IAKAD,IAAI,CAACK,UAAL,CAAgBJ,KAAhB,CANF;AAQA,SAAOC,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKK,SAA5B,IAAyCL,KAAK,KAAK,KAA1D;AACD;AAED;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBD,KAAhB,EAAuB;AACrB,SAAOM,OAAO,CAACN,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,UAAUA,KAAjD,CAAd;AACD","sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n"]},"metadata":{},"sourceType":"module"}