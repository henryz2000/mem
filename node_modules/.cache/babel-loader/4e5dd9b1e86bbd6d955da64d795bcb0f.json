{"ast":null,"code":"// @ts-nocheck\nimport refractorJavascript from './javascript.js';\nactionscript.displayName = 'actionscript';\nactionscript.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function actionscript(Prism) {\n  Prism.register(refractorJavascript);\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  });\n  Prism.languages.actionscript['class-name'].alias = 'function'; // doesn't work with AS because AS is too complex\n\n  delete Prism.languages.actionscript['parameter'];\n  delete Prism.languages.actionscript['literal-property'];\n\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/actionscript.js"],"names":["refractorJavascript","actionscript","displayName","aliases","Prism","register","languages","extend","keyword","operator","alias","markup","insertBefore","xml","pattern","lookbehind","inside"],"mappings":"AAAA;AACA,OAAOA,mBAAP,MAAgC,iBAAhC;AACAC,YAAY,CAACC,WAAb,GAA2B,cAA3B;AACAD,YAAY,CAACE,OAAb,GAAuB,EAAvB;AAEA;;AACA,eAAe,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;AAC1CA,EAAAA,KAAK,CAACC,QAAN,CAAeL,mBAAf;AACAI,EAAAA,KAAK,CAACE,SAAN,CAAgBL,YAAhB,GAA+BG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,YAAvB,EAAqC;AAClEC,IAAAA,OAAO,EACL,sUAFgE;AAGlEC,IAAAA,QAAQ,EAAE;AAHwD,GAArC,CAA/B;AAKAL,EAAAA,KAAK,CAACE,SAAN,CAAgBL,YAAhB,CAA6B,YAA7B,EAA2CS,KAA3C,GAAmD,UAAnD,CAP0C,CAS1C;;AACA,SAAON,KAAK,CAACE,SAAN,CAAgBL,YAAhB,CAA6B,WAA7B,CAAP;AACA,SAAOG,KAAK,CAACE,SAAN,CAAgBL,YAAhB,CAA6B,kBAA7B,CAAP;;AACA,MAAIG,KAAK,CAACE,SAAN,CAAgBK,MAApB,EAA4B;AAC1BP,IAAAA,KAAK,CAACE,SAAN,CAAgBM,YAAhB,CAA6B,cAA7B,EAA6C,QAA7C,EAAuD;AACrDC,MAAAA,GAAG,EAAE;AACHC,QAAAA,OAAO,EACL,2EAFC;AAGHC,QAAAA,UAAU,EAAE,IAHT;AAIHC,QAAAA,MAAM,EAAEZ,KAAK,CAACE,SAAN,CAAgBK;AAJrB;AADgD,KAAvD;AAQD;AACF","sourcesContent":["// @ts-nocheck\nimport refractorJavascript from './javascript.js'\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function actionscript(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function'\n\n  // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}