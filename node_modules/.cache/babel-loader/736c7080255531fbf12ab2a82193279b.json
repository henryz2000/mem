{"ast":null,"code":"// @ts-nocheck\nini.displayName = 'ini';\nini.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  };\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/ini.js"],"names":["ini","displayName","aliases","Prism","languages","comment","pattern","lookbehind","section","inside","alias","punctuation","key","value"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;AACjCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpB;AACJ;AACA;AACA;AACA;AAEIK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,4BADF;AAEPC,MAAAA,UAAU,EAAE;AAFL,KAPW;AAWpBC,IAAAA,OAAO,EAAE;AACPF,MAAAA,OAAO,EAAE,+BADF;AAEPC,MAAAA,UAAU,EAAE,IAFL;AAGPE,MAAAA,MAAM,EAAE;AACN,wBAAgB;AACdH,UAAAA,OAAO,EAAE,0DADK;AAEdC,UAAAA,UAAU,EAAE,IAFE;AAGdG,UAAAA,KAAK,EAAE;AAHO,SADV;AAMNC,QAAAA,WAAW,EAAE;AANP;AAHD,KAXW;AAuBpBC,IAAAA,GAAG,EAAE;AACHN,MAAAA,OAAO,EACL,8EAFC;AAGHC,MAAAA,UAAU,EAAE,IAHT;AAIHG,MAAAA,KAAK,EAAE;AAJJ,KAvBe;AA6BpBG,IAAAA,KAAK,EAAE;AACLP,MAAAA,OAAO,EAAE,4DADJ;AAELC,MAAAA,UAAU,EAAE,IAFP;AAGLG,MAAAA,KAAK,EAAE,YAHF;AAILD,MAAAA,MAAM,EAAE;AACN,uBAAe;AACbH,UAAAA,OAAO,EAAE,iBADI;AAEbC,UAAAA,UAAU,EAAE;AAFC;AADT;AAJH,KA7Ba;AAwCpBI,IAAAA,WAAW,EAAE;AAxCO,GAAtB;AA0CD","sourcesContent":["// @ts-nocheck\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n"]},"metadata":{},"sourceType":"module"}