{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\n\nvar constants_1 = require(\"./constants\");\n\nvar types_1 = require(\"./types\");\n/**\n * Default logger which logs to stdout and stderr.\n */\n\n\nvar Logger = /*#__PURE__*/function () {\n  function Logger(_ref) {\n    var level = _ref.level;\n\n    _classCallCheck(this, Logger);\n\n    this.level = level !== null && level !== void 0 ? level : types_1.LogLevel.INFO;\n  }\n  /**\n   * Log a debug message.\n   */\n\n\n  _createClass(Logger, [{\n    key: \"debug\",\n    value: function debug() {\n      if (this.shouldLogSeverity(types_1.LogLevel.DEBUG)) {\n        var _console;\n\n        for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n          msg[_key] = arguments[_key];\n        }\n\n        (_console = console).debug.apply(_console, [\"[debug]\"].concat(msg));\n      }\n    }\n    /**\n     * Log an info message.\n     */\n\n  }, {\n    key: \"info\",\n    value: function info() {\n      if (this.shouldLogSeverity(types_1.LogLevel.INFO)) {\n        var _console2;\n\n        for (var _len2 = arguments.length, msg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          msg[_key2] = arguments[_key2];\n        }\n\n        (_console2 = console).info.apply(_console2, [\"[info]\"].concat(msg));\n      }\n    }\n    /**\n     * Log a warning message.\n     */\n\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      if (this.shouldLogSeverity(types_1.LogLevel.WARN)) {\n        var _console3;\n\n        for (var _len3 = arguments.length, msg = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          msg[_key3] = arguments[_key3];\n        }\n\n        (_console3 = console).warn.apply(_console3, [\"[warn]\"].concat(msg));\n      }\n    }\n    /**\n     * Log an error message\n     */\n\n  }, {\n    key: \"error\",\n    value: function error() {\n      if (this.shouldLogSeverity(types_1.LogLevel.ERROR)) {\n        var _console4;\n\n        for (var _len4 = arguments.length, msg = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          msg[_key4] = arguments[_key4];\n        }\n\n        (_console4 = console).error.apply(_console4, [\"[error]\"].concat(msg));\n      }\n    }\n    /**\n     * Check if the inputLevel is >= the current log level.\n     */\n\n  }, {\n    key: \"shouldLogSeverity\",\n    value: function shouldLogSeverity(inputLevel) {\n      var minimumSeverity = constants_1.logLevelSeverities[this.level];\n      var inputSeverity = constants_1.logLevelSeverities[inputLevel];\n      return inputSeverity >= minimumSeverity;\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.Logger = Logger;","map":{"version":3,"sources":["../../../src/utils/logger/Logger.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;AAEG;;;IACU,M;AAIX,wBAA2C;AAAA,QAA7B,KAA6B,QAA7B,KAA6B;;AAAA;;AACzC,SAAK,KAAL,GAAa,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,OAAA,CAAA,QAAA,CAAS,IAA/B;AACD;AAED;;AAEG;;;;;WACI,iBAAuB;AAC5B,UAAI,KAAK,iBAAL,CAAuB,OAAA,CAAA,QAAA,CAAS,KAAhC,CAAJ,EAA4C;AAAA;;AAAA,0CAD9B,GAC8B;AAD9B,UAAA,GAC8B;AAAA;;AAC1C,oBAAA,OAAO,EAAC,KAAR,oCAA4B,GAA5B;AACD;AACF;AAED;;AAEG;;;;WACI,gBAAsB;AAC3B,UAAI,KAAK,iBAAL,CAAuB,OAAA,CAAA,QAAA,CAAS,IAAhC,CAAJ,EAA2C;AAAA;;AAAA,2CAD9B,GAC8B;AAD9B,UAAA,GAC8B;AAAA;;AACzC,qBAAA,OAAO,EAAC,IAAR,oCAA0B,GAA1B;AACD;AACF;AACD;;AAEG;;;;WACI,gBAAsB;AAC3B,UAAI,KAAK,iBAAL,CAAuB,OAAA,CAAA,QAAA,CAAS,IAAhC,CAAJ,EAA2C;AAAA;;AAAA,2CAD9B,GAC8B;AAD9B,UAAA,GAC8B;AAAA;;AACzC,qBAAA,OAAO,EAAC,IAAR,oCAA0B,GAA1B;AACD;AACF;AACD;;AAEG;;;;WACI,iBAAuB;AAC5B,UAAI,KAAK,iBAAL,CAAuB,OAAA,CAAA,QAAA,CAAS,KAAhC,CAAJ,EAA4C;AAAA;;AAAA,2CAD9B,GAC8B;AAD9B,UAAA,GAC8B;AAAA;;AAC1C,qBAAA,OAAO,EAAC,KAAR,qCAA4B,GAA5B;AACD;AACF;AAED;;AAEG;;;;WACK,2BAAkB,UAAlB,EAAsC;AAC5C,UAAM,eAAe,GAAG,WAAA,CAAA,kBAAA,CAAmB,KAAK,KAAxB,CAAxB;AACA,UAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,CAAmB,UAAnB,CAAtB;AAEA,aAAO,aAAa,IAAI,eAAxB;AACD;;;;;;AAlDH,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\n/**\n * Default logger which logs to stdout and stderr.\n */\nclass Logger {\n    constructor({ level }) {\n        this.level = level !== null && level !== void 0 ? level : types_1.LogLevel.INFO;\n    }\n    /**\n     * Log a debug message.\n     */\n    debug(...msg) {\n        if (this.shouldLogSeverity(types_1.LogLevel.DEBUG)) {\n            console.debug(`[debug]`, ...msg);\n        }\n    }\n    /**\n     * Log an info message.\n     */\n    info(...msg) {\n        if (this.shouldLogSeverity(types_1.LogLevel.INFO)) {\n            console.info(`[info]`, ...msg);\n        }\n    }\n    /**\n     * Log a warning message.\n     */\n    warn(...msg) {\n        if (this.shouldLogSeverity(types_1.LogLevel.WARN)) {\n            console.warn(`[warn]`, ...msg);\n        }\n    }\n    /**\n     * Log an error message\n     */\n    error(...msg) {\n        if (this.shouldLogSeverity(types_1.LogLevel.ERROR)) {\n            console.error(`[error]`, ...msg);\n        }\n    }\n    /**\n     * Check if the inputLevel is >= the current log level.\n     */\n    shouldLogSeverity(inputLevel) {\n        const minimumSeverity = constants_1.logLevelSeverities[this.level];\n        const inputSeverity = constants_1.logLevelSeverities[inputLevel];\n        return inputSeverity >= minimumSeverity;\n    }\n}\nexports.Logger = Logger;\n//# sourceMappingURL=Logger.js.map"]},"metadata":{},"sourceType":"script"}