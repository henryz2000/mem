{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\nimport Slugger from 'github-slugger';\nimport { hasProperty } from 'hast-util-has-property';\nimport { headingRank } from 'hast-util-heading-rank';\nimport { toString } from 'hast-util-to-string';\nimport { visit } from 'unist-util-visit';\nvar slugs = new Slugger();\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\n\nexport default function rehypeSlug() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var prefix = options.prefix || '';\n  return function (tree) {\n    slugs.reset();\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/rehype-slug/index.js"],"names":["Slugger","hasProperty","headingRank","toString","visit","slugs","rehypeSlug","options","prefix","tree","reset","node","properties","id","slug"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,IAAMC,KAAK,GAAG,IAAIL,OAAJ,EAAd;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASM,UAAT,GAAkC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC/C,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkB,EAAjC;AAEA,SAAO,UAACC,IAAD,EAAU;AACfJ,IAAAA,KAAK,CAACK,KAAN;AAEAN,IAAAA,KAAK,CAACK,IAAD,EAAO,SAAP,EAAkB,UAACE,IAAD,EAAU;AAC/B,UAAIT,WAAW,CAACS,IAAD,CAAX,IAAqBA,IAAI,CAACC,UAA1B,IAAwC,CAACX,WAAW,CAACU,IAAD,EAAO,IAAP,CAAxD,EAAsE;AACpEA,QAAAA,IAAI,CAACC,UAAL,CAAgBC,EAAhB,GAAqBL,MAAM,GAAGH,KAAK,CAACS,IAAN,CAAWX,QAAQ,CAACQ,IAAD,CAAnB,CAA9B;AACD;AACF,KAJI,CAAL;AAKD,GARD;AASD","sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug(options = {}) {\n  const prefix = options.prefix || ''\n\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}