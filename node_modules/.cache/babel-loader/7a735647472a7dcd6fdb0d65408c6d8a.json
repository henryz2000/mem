{"ast":null,"code":"// @ts-nocheck\nimport refractorJson from './json.js';\njson5.displayName = 'json5';\njson5.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function json5(Prism) {\n  Prism.register(refractorJson);\n\n  (function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [{\n        pattern: RegExp(string.source + '(?=\\\\s*:)'),\n        greedy: true\n      }, {\n        pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n        alias: 'unquoted'\n      }],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number: /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/json5.js"],"names":["refractorJson","json5","displayName","aliases","Prism","register","string","languages","extend","property","pattern","RegExp","source","greedy","alias","number"],"mappings":"AAAA;AACA,OAAOA,aAAP,MAA0B,WAA1B;AACAC,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;AAEA;;AACA,eAAe,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACnCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,aAAf;;AACC,GAAC,UAAUI,KAAV,EAAiB;AACjB,QAAIE,MAAM,GAAG,8CAAb;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAgBN,KAAhB,GAAwBG,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB,EAA+B;AACrDC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,OAAO,EAAEC,MAAM,CAACL,MAAM,CAACM,MAAP,GAAgB,WAAjB,CADjB;AAEEC,QAAAA,MAAM,EAAE;AAFV,OADQ,EAKR;AACEH,QAAAA,OAAO,EACL,gEAFJ;AAGEI,QAAAA,KAAK,EAAE;AAHT,OALQ,CAD2C;AAYrDR,MAAAA,MAAM,EAAE;AACNI,QAAAA,OAAO,EAAEJ,MADH;AAENO,QAAAA,MAAM,EAAE;AAFF,OAZ6C;AAgBrDE,MAAAA,MAAM,EACJ;AAjBmD,KAA/B,CAAxB;AAmBD,GArBA,EAqBEX,KArBF;AAsBF","sourcesContent":["// @ts-nocheck\nimport refractorJson from './json.js'\njson5.displayName = 'json5'\njson5.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}