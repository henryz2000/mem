{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nbirb.displayName = 'birb';\nbirb.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function birb(Prism) {\n  Prism.register(refractorClike);\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [/\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n    /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/],\n    keyword: /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  });\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  });\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/birb.js"],"names":["refractorClike","birb","displayName","aliases","Prism","register","languages","extend","string","pattern","greedy","keyword","operator","variable","insertBefore","metadata","alias"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;AAEA;;AACA,eAAe,SAASF,IAAT,CAAcG,KAAd,EAAqB;AAClCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,cAAf;AACAI,EAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,GAAuBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACrDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,+BADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD6C;AAKrD,kBAAc,CACZ,iCADY,EAEZ;AACA,mEAHY,CALuC;AAUrDC,IAAAA,OAAO,EACL,kJAXmD;AAYrDC,IAAAA,QAAQ,EAAE,8DAZ2C;AAarDC,IAAAA,QAAQ,EAAE;AAb2C,GAAhC,CAAvB;AAeAT,EAAAA,KAAK,CAACE,SAAN,CAAgBQ,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;AAC/CC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,OAAO,EAAE,OADD;AAERC,MAAAA,MAAM,EAAE,IAFA;AAGRM,MAAAA,KAAK,EAAE;AAHC;AADqC,GAAjD;AAOD","sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nbirb.displayName = 'birb'\nbirb.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function birb(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\n      // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}