{"ast":null,"code":"// @ts-nocheck\nimport refractorClike from './clike.js';\nprotobuf.displayName = 'protobuf';\nprotobuf.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function protobuf(Prism) {\n  Prism.register(refractorClike);\n\n  (function (Prism) {\n    var builtinTypes = /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/;\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [{\n        pattern: /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n        lookbehind: true\n      }, {\n        pattern: /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n        lookbehind: true\n      }],\n      keyword: /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    });\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/protobuf.js"],"names":["refractorClike","protobuf","displayName","aliases","Prism","register","builtinTypes","languages","extend","pattern","lookbehind","keyword","function","insertBefore","map","alias","inside","punctuation","builtin","annotation"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,YAA3B;AACAC,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,EAAnB;AAEA;;AACA,eAAe,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AACtCA,EAAAA,KAAK,CAACC,QAAN,CAAeL,cAAf;;AACC,GAAC,UAAUI,KAAV,EAAiB;AACjB,QAAIE,YAAY,GACd,2EADF;AAEAF,IAAAA,KAAK,CAACG,SAAN,CAAgBN,QAAhB,GAA2BG,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACzD,oBAAc,CACZ;AACEC,QAAAA,OAAO,EACL,6DAFJ;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADY,EAMZ;AACED,QAAAA,OAAO,EACL,4FAFJ;AAGEC,QAAAA,UAAU,EAAE;AAHd,OANY,CAD2C;AAazDC,MAAAA,OAAO,EACL,0KAduD;AAezDC,MAAAA,QAAQ,EAAE;AAf+C,KAAhC,CAA3B;AAiBAR,IAAAA,KAAK,CAACG,SAAN,CAAgBM,YAAhB,CAA6B,UAA7B,EAAyC,UAAzC,EAAqD;AACnDC,MAAAA,GAAG,EAAE;AACHL,QAAAA,OAAO,EAAE,0DADN;AAEHM,QAAAA,KAAK,EAAE,YAFJ;AAGHC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,QADP;AAENC,UAAAA,OAAO,EAAEZ;AAFH;AAHL,OAD8C;AASnDY,MAAAA,OAAO,EAAEZ,YAT0C;AAUnD,+BAAyB;AACvBG,QAAAA,OAAO,EAAE,8DADc;AAEvBM,QAAAA,KAAK,EAAE,YAFgB;AAGvBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AAHe,OAV0B;AAiBnDE,MAAAA,UAAU,EAAE;AACVV,QAAAA,OAAO,EAAE,2BADC;AAEVC,QAAAA,UAAU,EAAE;AAFF;AAjBuC,KAArD;AAsBD,GA1CA,EA0CEN,KA1CF;AA2CF","sourcesContent":["// @ts-nocheck\nimport refractorClike from './clike.js'\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function protobuf(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"module"}