{"ast":null,"code":"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\nimport { attribute } from './attribute.js';\nimport { className } from './class-name.js';\nimport { id } from './id.js';\nimport { name } from './name.js';\nimport { pseudo } from './pseudo.js';\n/**\n * Test a rule.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\n\nexport function test(query, element, index, parent, state) {\n  return Boolean((!query.tagName || name(query, element)) && (!query.classNames || className(query, element)) && (!query.id || id(query, element)) && (!query.attrs || attribute(query, element, state.schema)) && (!query.pseudos || pseudo(query, element, index, parent, state)));\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/hast-util-select/lib/test.js"],"names":["attribute","className","id","name","pseudo","test","query","element","index","parent","state","Boolean","tagName","classNames","attrs","schema","pseudos"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,QAAwB,gBAAxB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,EAAR,QAAiB,SAAjB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,SAAQC,MAAR,QAAqB,aAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoD;AACzD,SAAOC,OAAO,CACZ,CAAC,CAACL,KAAK,CAACM,OAAP,IAAkBT,IAAI,CAACG,KAAD,EAAQC,OAAR,CAAvB,MACG,CAACD,KAAK,CAACO,UAAP,IAAqBZ,SAAS,CAACK,KAAD,EAAQC,OAAR,CADjC,MAEG,CAACD,KAAK,CAACJ,EAAP,IAAaA,EAAE,CAACI,KAAD,EAAQC,OAAR,CAFlB,MAGG,CAACD,KAAK,CAACQ,KAAP,IAAgBd,SAAS,CAACM,KAAD,EAAQC,OAAR,EAAiBG,KAAK,CAACK,MAAvB,CAH5B,MAIG,CAACT,KAAK,CAACU,OAAP,IAAkBZ,MAAM,CAACE,KAAD,EAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,KAAhC,CAJ3B,CADY,CAAd;AAOD","sourcesContent":["/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, element, index, parent, state) {\n  return Boolean(\n    (!query.tagName || name(query, element)) &&\n      (!query.classNames || className(query, element)) &&\n      (!query.id || id(query, element)) &&\n      (!query.attrs || attribute(query, element, state.schema)) &&\n      (!query.pseudos || pseudo(query, element, index, parent, state))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}