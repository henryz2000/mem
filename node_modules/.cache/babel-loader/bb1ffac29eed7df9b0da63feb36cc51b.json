{"ast":null,"code":"// @ts-nocheck\nmel.displayName = 'mel';\nmel.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nexport default function mel(Prism) {\n  Prism.languages.mel = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        statement: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n\n        }\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: {\n      pattern: /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\n      lookbehind: true,\n      greedy: true\n    },\n    'tensor-punctuation': {\n      pattern: /<<|>>/,\n      alias: 'punctuation'\n    },\n    operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\n    punctuation: /[.,:;?\\[\\](){}]/\n  };\n  Prism.languages.mel['code'].inside['statement'].inside = Prism.languages.mel;\n}","map":{"version":3,"sources":["/Users/henryz2000/Downloads/chrome-react-seo-extension/node_modules/refractor/lang/mel.js"],"names":["mel","displayName","aliases","Prism","languages","comment","pattern","greedy","code","alias","inside","delimiter","statement","string","variable","number","flag","keyword","function","lookbehind","operator","punctuation"],"mappings":"AAAA;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;AAEA;;AACA,eAAe,SAASF,GAAT,CAAaG,KAAb,EAAoB;AACjCA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,yBADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADW;AAKpBC,IAAAA,IAAI,EAAE;AACJF,MAAAA,OAAO,EAAE,mBADL;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJE,MAAAA,KAAK,EAAE,QAHH;AAIJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE;AACTL,UAAAA,OAAO,EAAE,OADA;AAETG,UAAAA,KAAK,EAAE;AAFE,SADL;AAKNG,QAAAA,SAAS,EAAE;AACTN,UAAAA,OAAO,EAAE,SADA;AAETI,UAAAA,MAAM,EAAE,IAFC,CAEI;;AAFJ;AALL;AAJJ,KALc;AAqBpBG,IAAAA,MAAM,EAAE;AACNP,MAAAA,OAAO,EAAE,uBADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KArBY;AAyBpBO,IAAAA,QAAQ,EAAE,OAzBU;AA0BpBC,IAAAA,MAAM,EAAE,2CA1BY;AA2BpBC,IAAAA,IAAI,EAAE;AACJV,MAAAA,OAAO,EAAE,aADL;AAEJG,MAAAA,KAAK,EAAE;AAFH,KA3Bc;AA+BpBQ,IAAAA,OAAO,EACL,sHAhCkB;AAiCpBC,IAAAA,QAAQ,EAAE;AACRZ,MAAAA,OAAO,EACL,kFAFM;AAGRa,MAAAA,UAAU,EAAE,IAHJ;AAIRZ,MAAAA,MAAM,EAAE;AAJA,KAjCU;AAuCpB,0BAAsB;AACpBD,MAAAA,OAAO,EAAE,OADW;AAEpBG,MAAAA,KAAK,EAAE;AAFa,KAvCF;AA2CpBW,IAAAA,QAAQ,EAAE,8CA3CU;AA4CpBC,IAAAA,WAAW,EAAE;AA5CO,GAAtB;AA8CAlB,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,CAAoB,MAApB,EAA4BU,MAA5B,CAAmC,WAAnC,EAAgDA,MAAhD,GAAyDP,KAAK,CAACC,SAAN,CAAgBJ,GAAzE;AACD","sourcesContent":["// @ts-nocheck\nmel.displayName = 'mel'\nmel.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function mel(Prism) {\n  Prism.languages.mel = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        statement: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: {\n      pattern:\n        /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\n      lookbehind: true,\n      greedy: true\n    },\n    'tensor-punctuation': {\n      pattern: /<<|>>/,\n      alias: 'punctuation'\n    },\n    operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\n    punctuation: /[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside['statement'].inside = Prism.languages.mel\n}\n"]},"metadata":{},"sourceType":"module"}